{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import\"./Reservation.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Reservation(){const[selectedDate,setSelectedDate]=useState(new Date());const[reservations,setReservations]=useState([]);const[courts,setCourts]=useState([]);const[userEmail,setUserEmail]=useState(null);const[sortField,setSortField]=useState(\"\");const[modalContent,setModalContent]=useState(null);const[sortOrder,setSortOrder]=useState(\"asc\");const[highlightedCells,setHighlightedCells]=useState({});const[expandedRows,setExpandedRows]=useState([]);const[tableReservations,setTableReservations]=useState([]);const times=Array.from({length:15},(_,i)=>`${String(8+i).padStart(2,\"0\")}:00`);const toggleRow=index=>{setExpandedRows(prev=>prev.includes(index)?prev.filter(i=>i!==index):[...prev,index]);};useEffect(()=>{// Fetch logged-in user from local storage\nconst storedUser=localStorage.getItem(\"user\");if(storedUser){const parsedUser=JSON.parse(storedUser);setUserEmail(parsedUser.Email);}fetchCourts();if(storedUser){fetchReservations(JSON.parse(storedUser).Email);}},[]);const fetchCourts=()=>{fetch(\"/api/courts\").then(response=>{if(!response.ok){throw new Error(`HTTP error! Status: ${response.status}`);}return response.json();}).then(setCourts).catch(error=>console.error(\"Error fetching courts:\",error));};const fetchReservations=email=>{fetch(`/api/reservations?email=${encodeURIComponent(email)}`).then(response=>{if(!response.ok){throw new Error(`HTTP error! Status: ${response.status}`);}return response.json();}).then(setReservations).catch(error=>console.error(\"Error fetching reservations:\",error));};const fetchReservationsForDay=date=>{const localDate=new Date(date);// Create a new Date object to avoid mutating the original\nlocalDate.setHours(0,0,0,0);// Set to midnight local time\nconst formattedDate=localDate.toISOString().split(\"T\")[0];// Format date as YYYY-MM-DD\nconsole.log(\"Formatted Date for API call:\",formattedDate);fetch(`/api/reservations/day?date=${formattedDate}`).then(response=>{if(!response.ok){throw new Error(`HTTP error! Status: ${response.status}`);}return response.json();}).then(data=>{console.log(\"Fetched reservations for the day:\",data);// Debug fetched data\nsetTableReservations(data);}).catch(error=>console.error(\"Error fetching reservations:\",error));};const handleDateChange=date=>{const localDate=new Date(date);localDate.setHours(0,0,0,0);// Normalize the date to midnight local time\nconsole.log(\"Normalized Date selected:\",localDate);setSelectedDate(localDate);// Update state with the normalized date\nfetchReservationsForDay(localDate);// Fetch reservations for the normalized date\n};const getReservationStatus=(time,courtId)=>{//console.log(\"Table Reservations:\", tableReservations);\nconst reservation=tableReservations.find(res=>res.CourtID===courtId&&res.StartTime<=time&&res.EndTime>time&&new Date(res.Date).toDateString()===selectedDate.toDateString());if(reservation){console.log(\"Matching reservation:\",reservation);};if(!reservation)return\"Available\";return reservation.Email===userEmail?\"YourReservations\":\"Reserved\";};const handleCellClick=(time,courtId)=>{setHighlightedCells(prev=>({...prev,[`${time}-${courtId}`]:true}));const reservation=reservations.find(res=>res.CourtID===courtId&&res.StartTime<=time&&res.EndTime>time&&new Date(res.Date).toDateString()===selectedDate.toDateString());setModalContent(reservation?`Reservation Details:\\nName: ${reservation.Name}\\nCourt: ${reservation.CourtName}\\nTime: ${time}`:`No reservation exists for Court ${courtId} at ${time}`);};const closeModal=()=>{setModalContent(null);setHighlightedCells({});};const cancelReservation=async id=>{const reason=prompt(\"Please provide a reason for cancellation:\");if(!reason){alert(\"Cancellation reason is required.\");return;}try{const response=await fetch(`/api/reservations/${id}/cancel`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({CancellationReason:reason})});if(!response.ok)throw new Error(await response.text());alert(\"Reservation cancelled successfully.\");fetchReservations(userEmail);// Refresh reservations\n}catch(error){console.error(\"Error cancelling reservation:\",error);}};const sortReservations=field=>{const newSortOrder=sortField===field&&sortOrder===\"asc\"?\"desc\":\"asc\";setSortField(field);setSortOrder(newSortOrder);const sortedReservations=[...reservations].sort((a,b)=>{const valueA=field===\"Date\"?new Date(a[field]):a[field];const valueB=field===\"Date\"?new Date(b[field]):b[field];return(valueA>valueB?1:-1)*(newSortOrder===\"asc\"?1:-1);});setReservations(sortedReservations);};const formatDate=date=>new Date(date).toLocaleDateString(\"en-GB\");const formatTime=timeString=>{try{const date=new Date(timeString);if(isNaN(date.getTime())){throw new Error(\"Invalid date\");}return date.toLocaleTimeString([],{hour:\"2-digit\",minute:\"2-digit\",hourCycle:'h23'});}catch(error){console.error(\"Invalid time format:\",timeString);return\"Invalid Time\";}};return/*#__PURE__*/_jsxs(\"div\",{className:\"reservation-page\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"date-picker\",children:/*#__PURE__*/_jsx(DatePicker,{selected:selectedDate,onChange:date=>handleDateChange(date),minDate:new Date(),maxDate:new Date().setMonth(new Date().getMonth()+2),dateFormat:\"EEEE, MMMM d, yyyy\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-item available\",children:\"Available\"}),/*#__PURE__*/_jsx(\"div\",{className:\"legend-item user-reserved\",children:\"Your Reservations\"}),/*#__PURE__*/_jsx(\"div\",{className:\"legend-item other-reserved\",children:\"Reserved\"})]}),/*#__PURE__*/_jsxs(\"table\",{className:\"reservation-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Hour\"}),courts.map(court=>/*#__PURE__*/_jsx(\"th\",{children:court.CourtName},court.CourtID))]})}),/*#__PURE__*/_jsx(\"tbody\",{children:times.map(time=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"hour-cell\",children:time}),courts.map(court=>{const status=getReservationStatus(time,court.CourtID);return/*#__PURE__*/_jsx(\"td\",{className:`${status.toLowerCase()} ${highlightedCells[`${time}-${court.CourtID}`]?\"highlighted-cell\":\"\"}`,onClick:()=>handleCellClick(time,court.CourtID)},`${time}-${court.CourtID}`);})]},time))})]}),modalContent&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"close\",onClick:closeModal,children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"p\",{children:modalContent})]})}),/*#__PURE__*/_jsx(\"hr\",{className:\"divider\"}),userEmail?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Reservations\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"reservations-list\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{onClick:()=>sortReservations(\"Date\"),children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{onClick:()=>sortReservations(\"StartTime\"),children:\"Start\"}),/*#__PURE__*/_jsx(\"th\",{children:\"End\"}),/*#__PURE__*/_jsx(\"th\",{onClick:()=>sortReservations(\"CourtName\"),children:\"Court\"}),/*#__PURE__*/_jsx(\"th\",{onClick:()=>sortReservations(\"Status\"),children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:reservations.map((reservation,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"tr\",{onClick:()=>toggleRow(index),children:[/*#__PURE__*/_jsx(\"td\",{children:formatDate(reservation.Date)}),/*#__PURE__*/_jsx(\"td\",{children:formatTime(reservation.StartTime)}),/*#__PURE__*/_jsx(\"td\",{children:formatTime(reservation.EndTime)}),/*#__PURE__*/_jsx(\"td\",{children:reservation.CourtName}),/*#__PURE__*/_jsx(\"td\",{children:reservation.Status})]}),expandedRows.includes(index)&&/*#__PURE__*/_jsx(\"tr\",{className:\"expanded-row\",children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"expanded-content\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",reservation.Name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",reservation.Email]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Duration:\"}),\" \",reservation.Duration,\" hours\"]}),reservation.Status===\"Cancelled\"&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Cancellation Reason:\"}),\" \",reservation.CancellationReason]}),reservation.Status===\"Created\"&&/*#__PURE__*/_jsx(\"button\",{className:\"cancel-button\",onClick:e=>{e.stopPropagation();// Prevent row collapse\ncancelReservation(reservation.ReservationID);},children:\"Cancel\"})]})})})]},reservation.ReservationID))})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Please log in to view your reservations.\"})]});}export default Reservation;","map":{"version":3,"names":["React","useState","useEffect","DatePicker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Reservation","selectedDate","setSelectedDate","Date","reservations","setReservations","courts","setCourts","userEmail","setUserEmail","sortField","setSortField","modalContent","setModalContent","sortOrder","setSortOrder","highlightedCells","setHighlightedCells","expandedRows","setExpandedRows","tableReservations","setTableReservations","times","Array","from","length","_","i","String","padStart","toggleRow","index","prev","includes","filter","storedUser","localStorage","getItem","parsedUser","JSON","parse","Email","fetchCourts","fetchReservations","fetch","then","response","ok","Error","status","json","catch","error","console","email","encodeURIComponent","fetchReservationsForDay","date","localDate","setHours","formattedDate","toISOString","split","log","data","handleDateChange","getReservationStatus","time","courtId","reservation","find","res","CourtID","StartTime","EndTime","toDateString","handleCellClick","Name","CourtName","closeModal","cancelReservation","id","reason","prompt","alert","method","headers","body","stringify","CancellationReason","text","sortReservations","field","newSortOrder","sortedReservations","sort","a","b","valueA","valueB","formatDate","toLocaleDateString","formatTime","timeString","isNaN","getTime","toLocaleTimeString","hour","minute","hourCycle","className","children","selected","onChange","minDate","maxDate","setMonth","getMonth","dateFormat","map","court","toLowerCase","onClick","Status","colSpan","Duration","e","stopPropagation","ReservationID"],"sources":["/Users/michalfloch/Desktop/MUNI/Master Thesis/src/NodeApp/frontend/src/pages/Reservation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./Reservation.css\";\n\nfunction Reservation() {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [reservations, setReservations] = useState([]);\n    const [courts, setCourts] = useState([]);\n    const [userEmail, setUserEmail] = useState(null);\n    const [sortField, setSortField] = useState(\"\");\n    const [modalContent, setModalContent] = useState(null);\n    const [sortOrder, setSortOrder] = useState(\"asc\");\n    const [highlightedCells, setHighlightedCells] = useState({});\n    const [expandedRows, setExpandedRows] = useState([]);\n    const [tableReservations, setTableReservations] = useState([]);\n\n    const times = Array.from({ length: 15 }, (_, i) => `${String(8 + i).padStart(2, \"0\")}:00`);\n\n    const toggleRow = (index) => {\n        setExpandedRows((prev) =>\n            prev.includes(index) ? prev.filter((i) => i !== index) : [...prev, index]\n        );\n    };    \n\n    useEffect(() => {\n        // Fetch logged-in user from local storage\n        const storedUser = localStorage.getItem(\"user\");\n        if (storedUser) {\n            const parsedUser = JSON.parse(storedUser);\n            setUserEmail(parsedUser.Email);\n        }\n\n        fetchCourts();\n\n        if (storedUser) {\n            fetchReservations(JSON.parse(storedUser).Email);\n        }\n    }, []);\n\n    const fetchCourts = () => {\n        fetch(\"/api/courts\")\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(setCourts)\n            .catch((error) => console.error(\"Error fetching courts:\", error));\n    };\n\n    const fetchReservations = (email) => {\n        fetch(`/api/reservations?email=${encodeURIComponent(email)}`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(setReservations)\n            .catch((error) => console.error(\"Error fetching reservations:\", error));\n    };\n\n    const fetchReservationsForDay = (date) => {\n        const localDate = new Date(date); // Create a new Date object to avoid mutating the original\n        localDate.setHours(0, 0, 0, 0); // Set to midnight local time\n    \n        const formattedDate = localDate.toISOString().split(\"T\")[0]; // Format date as YYYY-MM-DD\n        console.log(\"Formatted Date for API call:\", formattedDate);\n    \n        fetch(`/api/reservations/day?date=${formattedDate}`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then((data) => {\n                console.log(\"Fetched reservations for the day:\", data); // Debug fetched data\n                setTableReservations(data);\n            })\n            .catch((error) => console.error(\"Error fetching reservations:\", error));\n    };\n\n    const handleDateChange = (date) => {\n        const localDate = new Date(date);\n        localDate.setHours(0, 0, 0, 0); // Normalize the date to midnight local time\n        console.log(\"Normalized Date selected:\", localDate);\n    \n        setSelectedDate(localDate); // Update state with the normalized date\n        fetchReservationsForDay(localDate); // Fetch reservations for the normalized date\n    };\n\n    const getReservationStatus = (time, courtId) => {\n        //console.log(\"Table Reservations:\", tableReservations);\n    \n        const reservation = tableReservations.find(\n            (res) =>\n                res.CourtID === courtId &&\n                res.StartTime <= time &&\n                res.EndTime > time &&\n                new Date(res.Date).toDateString() === selectedDate.toDateString()\n        );\n        if (reservation) {console.log(\"Matching reservation:\", reservation)};\n    \n        if (!reservation) return \"Available\";\n        return reservation.Email === userEmail ? \"YourReservations\" : \"Reserved\";\n    };\n\n    const handleCellClick = (time, courtId) => {\n        setHighlightedCells((prev) => ({\n            ...prev,\n            [`${time}-${courtId}`]: true,\n        }));\n    \n        const reservation = reservations.find(\n            (res) =>\n                res.CourtID === courtId &&\n                res.StartTime <= time &&\n                res.EndTime > time &&\n                new Date(res.Date).toDateString() === selectedDate.toDateString()\n        );\n    \n        setModalContent(\n            reservation\n                ? `Reservation Details:\\nName: ${reservation.Name}\\nCourt: ${reservation.CourtName}\\nTime: ${time}`\n                : `No reservation exists for Court ${courtId} at ${time}`\n        );\n    };\n\n    const closeModal = () => {\n        setModalContent(null);\n        setHighlightedCells({});\n    };\n\n\n    const cancelReservation = async (id) => {\n        const reason = prompt(\"Please provide a reason for cancellation:\");\n        if (!reason) {\n            alert(\"Cancellation reason is required.\");\n            return;\n        }\n\n        try {\n            const response = await fetch(`/api/reservations/${id}/cancel`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ CancellationReason: reason }),\n            });\n\n            if (!response.ok) throw new Error(await response.text());\n\n            alert(\"Reservation cancelled successfully.\");\n            fetchReservations(userEmail); // Refresh reservations\n        } catch (error) {\n            console.error(\"Error cancelling reservation:\", error);\n        }\n    };\n\n    const sortReservations = (field) => {\n        const newSortOrder = sortField === field && sortOrder === \"asc\" ? \"desc\" : \"asc\";\n        setSortField(field);\n        setSortOrder(newSortOrder);\n\n        const sortedReservations = [...reservations].sort((a, b) => {\n            const valueA = field === \"Date\" ? new Date(a[field]) : a[field];\n            const valueB = field === \"Date\" ? new Date(b[field]) : b[field];\n            return (valueA > valueB ? 1 : -1) * (newSortOrder === \"asc\" ? 1 : -1);\n        });\n\n        setReservations(sortedReservations);\n    };\n\n    const formatDate = (date) => new Date(date).toLocaleDateString(\"en-GB\");\n    const formatTime = (timeString) => {\n        try {\n            const date = new Date(timeString);\n            if (isNaN(date.getTime())) {\n                throw new Error(\"Invalid date\");\n            }\n            return date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" , hourCycle: 'h23'});\n        } catch (error) {\n            console.error(\"Invalid time format:\", timeString);\n            return \"Invalid Time\";\n        }\n    };\n\n    return (\n        <div className=\"reservation-page\">\n            <div className=\"date-picker\">\n                <DatePicker\n                    selected={selectedDate}\n                    onChange={(date) => handleDateChange(date)}\n                    minDate={new Date()}\n                    maxDate={new Date().setMonth(new Date().getMonth() + 2)}\n                    dateFormat=\"EEEE, MMMM d, yyyy\"\n                />\n            </div>\n\n            <div className=\"legend\">\n                <div className=\"legend-item available\">Available</div>\n                <div className=\"legend-item user-reserved\">Your Reservations</div>\n                <div className=\"legend-item other-reserved\">Reserved</div>\n            </div>\n\n            <table className=\"reservation-table\">\n                <thead>\n                    <tr>\n                        <th>Hour</th>\n                        {courts.map((court) => (\n                            <th key={court.CourtID}>{court.CourtName}</th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {times.map((time) => (\n                        <tr key={time}>\n                            <td className=\"hour-cell\">{time}</td>\n                            {courts.map((court) => {\n                                const status = getReservationStatus(time, court.CourtID);\n                                return (\n                                    <td\n                                        key={`${time}-${court.CourtID}`}\n                                        className={`${status.toLowerCase()} ${\n                                            highlightedCells[`${time}-${court.CourtID}`]\n                                                ? \"highlighted-cell\"\n                                                : \"\"\n                                        }`}\n                                        onClick={() => handleCellClick(time, court.CourtID)}\n                                    ></td>\n                                );\n                            })}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            {modalContent && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <span className=\"close\" onClick={closeModal}>\n                            &times;\n                        </span>\n                        <p>{modalContent}</p>\n                    </div>\n                </div>\n            )}\n\n            <hr className=\"divider\" />\n\n            {userEmail ? (\n                <>\n                    <h3>Your Reservations</h3>\n                    <table className=\"reservations-list\">\n                        <thead>\n                            <tr>\n                                <th onClick={() => sortReservations(\"Date\")}>Date</th>\n                                <th onClick={() => sortReservations(\"StartTime\")}>Start</th>\n                                <th>End</th>\n                                <th onClick={() => sortReservations(\"CourtName\")}>Court</th>\n                                <th onClick={() => sortReservations(\"Status\")}>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {reservations.map((reservation, index) => (\n                                <React.Fragment key={reservation.ReservationID}>\n                                    {/* Top-level row */}\n                                    <tr onClick={() => toggleRow(index)}>\n                                        <td>{formatDate(reservation.Date)}</td>\n                                        <td>{formatTime(reservation.StartTime)}</td>\n                                        <td>{formatTime(reservation.EndTime)}</td>\n                                        <td>{reservation.CourtName}</td>\n                                        <td>{reservation.Status}</td>\n                                    </tr>\n\n                                    {/* Expandable row */}\n                                    {expandedRows.includes(index) && (\n                                        <tr className=\"expanded-row\">\n                                            <td colSpan=\"5\">\n                                                <div className=\"expanded-content\">\n                                                    <p>\n                                                        <strong>Name:</strong> {reservation.Name}\n                                                    </p>\n                                                    <p>\n                                                        <strong>Email:</strong> {reservation.Email}\n                                                    </p>\n                                                    <p>\n                                                        <strong>Duration:</strong> {reservation.Duration} hours\n                                                    </p>\n                                                    {reservation.Status === \"Cancelled\" && (\n                                                        <p>\n                                                            <strong>Cancellation Reason:</strong>{\" \"}\n                                                            {reservation.CancellationReason}\n                                                        </p>\n                                                    )}\n                                                    {reservation.Status === \"Created\" && (\n                                                        <button\n                                                            className=\"cancel-button\"\n                                                            onClick={(e) => {\n                                                                e.stopPropagation(); // Prevent row collapse\n                                                                cancelReservation(reservation.ReservationID);\n                                                            }}\n                                                        >\n                                                            Cancel\n                                                        </button>\n                                                    )}\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </React.Fragment>\n                            ))}\n                        </tbody>\n                    </table>\n                </>\n            ) : (\n                <p>Please log in to view your reservations.</p>\n            )}\n        </div>\n    );\n}\n\nexport default Reservation;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CACzC,MAAO,4CAA4C,CACnD,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE3B,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACnB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGX,QAAQ,CAAC,GAAI,CAAAY,IAAI,CAAC,CAAC,CAAC,CAC5D,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACe,MAAM,CAAEC,SAAS,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACiB,SAAS,CAAEC,YAAY,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACmB,SAAS,CAAEC,YAAY,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACqB,YAAY,CAAEC,eAAe,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACuB,SAAS,CAAEC,YAAY,CAAC,CAAGxB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACyB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC5D,KAAM,CAAC2B,YAAY,CAAEC,eAAe,CAAC,CAAG5B,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAAC6B,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG9B,QAAQ,CAAC,EAAE,CAAC,CAE9D,KAAM,CAAA+B,KAAK,CAAGC,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAE,CAACC,CAAC,CAAEC,CAAC,GAAK,GAAGC,MAAM,CAAC,CAAC,CAAGD,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,KAAK,CAAC,CAE1F,KAAM,CAAAC,SAAS,CAAIC,KAAK,EAAK,CACzBZ,eAAe,CAAEa,IAAI,EACjBA,IAAI,CAACC,QAAQ,CAACF,KAAK,CAAC,CAAGC,IAAI,CAACE,MAAM,CAAEP,CAAC,EAAKA,CAAC,GAAKI,KAAK,CAAC,CAAG,CAAC,GAAGC,IAAI,CAAED,KAAK,CAC5E,CAAC,CACL,CAAC,CAEDvC,SAAS,CAAC,IAAM,CACZ;AACA,KAAM,CAAA2C,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC/C,GAAIF,UAAU,CAAE,CACZ,KAAM,CAAAG,UAAU,CAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CACzC1B,YAAY,CAAC6B,UAAU,CAACG,KAAK,CAAC,CAClC,CAEAC,WAAW,CAAC,CAAC,CAEb,GAAIP,UAAU,CAAE,CACZQ,iBAAiB,CAACJ,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAACM,KAAK,CAAC,CACnD,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACtBE,KAAK,CAAC,aAAa,CAAC,CACfC,IAAI,CAAEC,QAAQ,EAAK,CAChB,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC,CAC7D,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC1B,CAAC,CAAC,CACDL,IAAI,CAACtC,SAAS,CAAC,CACf4C,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAAC,CACzE,CAAC,CAED,KAAM,CAAAT,iBAAiB,CAAIW,KAAK,EAAK,CACjCV,KAAK,CAAC,2BAA2BW,kBAAkB,CAACD,KAAK,CAAC,EAAE,CAAC,CACxDT,IAAI,CAAEC,QAAQ,EAAK,CAChB,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC,CAC7D,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC1B,CAAC,CAAC,CACDL,IAAI,CAACxC,eAAe,CAAC,CACrB8C,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CAAC,CAC/E,CAAC,CAED,KAAM,CAAAI,uBAAuB,CAAIC,IAAI,EAAK,CACtC,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAvD,IAAI,CAACsD,IAAI,CAAC,CAAE;AAClCC,SAAS,CAACC,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE;AAEhC,KAAM,CAAAC,aAAa,CAAGF,SAAS,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE;AAC7DT,OAAO,CAACU,GAAG,CAAC,8BAA8B,CAAEH,aAAa,CAAC,CAE1DhB,KAAK,CAAC,8BAA8BgB,aAAa,EAAE,CAAC,CAC/Cf,IAAI,CAAEC,QAAQ,EAAK,CAChB,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC,CAC7D,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC1B,CAAC,CAAC,CACDL,IAAI,CAAEmB,IAAI,EAAK,CACZX,OAAO,CAACU,GAAG,CAAC,mCAAmC,CAAEC,IAAI,CAAC,CAAE;AACxD3C,oBAAoB,CAAC2C,IAAI,CAAC,CAC9B,CAAC,CAAC,CACDb,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CAAC,CAC/E,CAAC,CAED,KAAM,CAAAa,gBAAgB,CAAIR,IAAI,EAAK,CAC/B,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAvD,IAAI,CAACsD,IAAI,CAAC,CAChCC,SAAS,CAACC,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE;AAChCN,OAAO,CAACU,GAAG,CAAC,2BAA2B,CAAEL,SAAS,CAAC,CAEnDxD,eAAe,CAACwD,SAAS,CAAC,CAAE;AAC5BF,uBAAuB,CAACE,SAAS,CAAC,CAAE;AACxC,CAAC,CAED,KAAM,CAAAQ,oBAAoB,CAAGA,CAACC,IAAI,CAAEC,OAAO,GAAK,CAC5C;AAEA,KAAM,CAAAC,WAAW,CAAGjD,iBAAiB,CAACkD,IAAI,CACrCC,GAAG,EACAA,GAAG,CAACC,OAAO,GAAKJ,OAAO,EACvBG,GAAG,CAACE,SAAS,EAAIN,IAAI,EACrBI,GAAG,CAACG,OAAO,CAAGP,IAAI,EAClB,GAAI,CAAAhE,IAAI,CAACoE,GAAG,CAACpE,IAAI,CAAC,CAACwE,YAAY,CAAC,CAAC,GAAK1E,YAAY,CAAC0E,YAAY,CAAC,CACxE,CAAC,CACD,GAAIN,WAAW,CAAE,CAAChB,OAAO,CAACU,GAAG,CAAC,uBAAuB,CAAEM,WAAW,CAAC,EAAC,CAEpE,GAAI,CAACA,WAAW,CAAE,MAAO,WAAW,CACpC,MAAO,CAAAA,WAAW,CAAC5B,KAAK,GAAKjC,SAAS,CAAG,kBAAkB,CAAG,UAAU,CAC5E,CAAC,CAED,KAAM,CAAAoE,eAAe,CAAGA,CAACT,IAAI,CAAEC,OAAO,GAAK,CACvCnD,mBAAmB,CAAEe,IAAI,GAAM,CAC3B,GAAGA,IAAI,CACP,CAAC,GAAGmC,IAAI,IAAIC,OAAO,EAAE,EAAG,IAC5B,CAAC,CAAC,CAAC,CAEH,KAAM,CAAAC,WAAW,CAAGjE,YAAY,CAACkE,IAAI,CAChCC,GAAG,EACAA,GAAG,CAACC,OAAO,GAAKJ,OAAO,EACvBG,GAAG,CAACE,SAAS,EAAIN,IAAI,EACrBI,GAAG,CAACG,OAAO,CAAGP,IAAI,EAClB,GAAI,CAAAhE,IAAI,CAACoE,GAAG,CAACpE,IAAI,CAAC,CAACwE,YAAY,CAAC,CAAC,GAAK1E,YAAY,CAAC0E,YAAY,CAAC,CACxE,CAAC,CAED9D,eAAe,CACXwD,WAAW,CACL,+BAA+BA,WAAW,CAACQ,IAAI,YAAYR,WAAW,CAACS,SAAS,WAAWX,IAAI,EAAE,CACjG,mCAAmCC,OAAO,OAAOD,IAAI,EAC/D,CAAC,CACL,CAAC,CAED,KAAM,CAAAY,UAAU,CAAGA,CAAA,GAAM,CACrBlE,eAAe,CAAC,IAAI,CAAC,CACrBI,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAC3B,CAAC,CAGD,KAAM,CAAA+D,iBAAiB,CAAG,KAAO,CAAAC,EAAE,EAAK,CACpC,KAAM,CAAAC,MAAM,CAAGC,MAAM,CAAC,2CAA2C,CAAC,CAClE,GAAI,CAACD,MAAM,CAAE,CACTE,KAAK,CAAC,kCAAkC,CAAC,CACzC,OACJ,CAEA,GAAI,CACA,KAAM,CAAAtC,QAAQ,CAAG,KAAM,CAAAF,KAAK,CAAC,qBAAqBqC,EAAE,SAAS,CAAE,CAC3DI,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEhD,IAAI,CAACiD,SAAS,CAAC,CAAEC,kBAAkB,CAAEP,MAAO,CAAC,CACvD,CAAC,CAAC,CAEF,GAAI,CAACpC,QAAQ,CAACC,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,KAAM,CAAAF,QAAQ,CAAC4C,IAAI,CAAC,CAAC,CAAC,CAExDN,KAAK,CAAC,qCAAqC,CAAC,CAC5CzC,iBAAiB,CAACnC,SAAS,CAAC,CAAE;AAClC,CAAE,MAAO4C,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACzD,CACJ,CAAC,CAED,KAAM,CAAAuC,gBAAgB,CAAIC,KAAK,EAAK,CAChC,KAAM,CAAAC,YAAY,CAAGnF,SAAS,GAAKkF,KAAK,EAAI9E,SAAS,GAAK,KAAK,CAAG,MAAM,CAAG,KAAK,CAChFH,YAAY,CAACiF,KAAK,CAAC,CACnB7E,YAAY,CAAC8E,YAAY,CAAC,CAE1B,KAAM,CAAAC,kBAAkB,CAAG,CAAC,GAAG1F,YAAY,CAAC,CAAC2F,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACxD,KAAM,CAAAC,MAAM,CAAGN,KAAK,GAAK,MAAM,CAAG,GAAI,CAAAzF,IAAI,CAAC6F,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAGI,CAAC,CAACJ,KAAK,CAAC,CAC/D,KAAM,CAAAO,MAAM,CAAGP,KAAK,GAAK,MAAM,CAAG,GAAI,CAAAzF,IAAI,CAAC8F,CAAC,CAACL,KAAK,CAAC,CAAC,CAAGK,CAAC,CAACL,KAAK,CAAC,CAC/D,MAAO,CAACM,MAAM,CAAGC,MAAM,CAAG,CAAC,CAAG,CAAC,CAAC,GAAKN,YAAY,GAAK,KAAK,CAAG,CAAC,CAAG,CAAC,CAAC,CAAC,CACzE,CAAC,CAAC,CAEFxF,eAAe,CAACyF,kBAAkB,CAAC,CACvC,CAAC,CAED,KAAM,CAAAM,UAAU,CAAI3C,IAAI,EAAK,GAAI,CAAAtD,IAAI,CAACsD,IAAI,CAAC,CAAC4C,kBAAkB,CAAC,OAAO,CAAC,CACvE,KAAM,CAAAC,UAAU,CAAIC,UAAU,EAAK,CAC/B,GAAI,CACA,KAAM,CAAA9C,IAAI,CAAG,GAAI,CAAAtD,IAAI,CAACoG,UAAU,CAAC,CACjC,GAAIC,KAAK,CAAC/C,IAAI,CAACgD,OAAO,CAAC,CAAC,CAAC,CAAE,CACvB,KAAM,IAAI,CAAAzD,KAAK,CAAC,cAAc,CAAC,CACnC,CACA,MAAO,CAAAS,IAAI,CAACiD,kBAAkB,CAAC,EAAE,CAAE,CAAEC,IAAI,CAAE,SAAS,CAAEC,MAAM,CAAE,SAAS,CAAGC,SAAS,CAAE,KAAK,CAAC,CAAC,CAChG,CAAE,MAAOzD,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEmD,UAAU,CAAC,CACjD,MAAO,cAAc,CACzB,CACJ,CAAC,CAED,mBACI1G,KAAA,QAAKiH,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7BpH,IAAA,QAAKmH,SAAS,CAAC,aAAa,CAAAC,QAAA,cACxBpH,IAAA,CAACF,UAAU,EACPuH,QAAQ,CAAE/G,YAAa,CACvBgH,QAAQ,CAAGxD,IAAI,EAAKQ,gBAAgB,CAACR,IAAI,CAAE,CAC3CyD,OAAO,CAAE,GAAI,CAAA/G,IAAI,CAAC,CAAE,CACpBgH,OAAO,CAAE,GAAI,CAAAhH,IAAI,CAAC,CAAC,CAACiH,QAAQ,CAAC,GAAI,CAAAjH,IAAI,CAAC,CAAC,CAACkH,QAAQ,CAAC,CAAC,CAAG,CAAC,CAAE,CACxDC,UAAU,CAAC,oBAAoB,CAClC,CAAC,CACD,CAAC,cAENzH,KAAA,QAAKiH,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnBpH,IAAA,QAAKmH,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,WAAS,CAAK,CAAC,cACtDpH,IAAA,QAAKmH,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAC,mBAAiB,CAAK,CAAC,cAClEpH,IAAA,QAAKmH,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,UAAQ,CAAK,CAAC,EACzD,CAAC,cAENlH,KAAA,UAAOiH,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpH,IAAA,UAAAoH,QAAA,cACIlH,KAAA,OAAAkH,QAAA,eACIpH,IAAA,OAAAoH,QAAA,CAAI,MAAI,CAAI,CAAC,CACZzG,MAAM,CAACiH,GAAG,CAAEC,KAAK,eACd7H,IAAA,OAAAoH,QAAA,CAAyBS,KAAK,CAAC1C,SAAS,EAA/B0C,KAAK,CAAChD,OAA8B,CAChD,CAAC,EACF,CAAC,CACF,CAAC,cACR7E,IAAA,UAAAoH,QAAA,CACKzF,KAAK,CAACiG,GAAG,CAAEpD,IAAI,eACZtE,KAAA,OAAAkH,QAAA,eACIpH,IAAA,OAAImH,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAE5C,IAAI,CAAK,CAAC,CACpC7D,MAAM,CAACiH,GAAG,CAAEC,KAAK,EAAK,CACnB,KAAM,CAAAvE,MAAM,CAAGiB,oBAAoB,CAACC,IAAI,CAAEqD,KAAK,CAAChD,OAAO,CAAC,CACxD,mBACI7E,IAAA,OAEImH,SAAS,CAAE,GAAG7D,MAAM,CAACwE,WAAW,CAAC,CAAC,IAC9BzG,gBAAgB,CAAC,GAAGmD,IAAI,IAAIqD,KAAK,CAAChD,OAAO,EAAE,CAAC,CACtC,kBAAkB,CAClB,EAAE,EACT,CACHkD,OAAO,CAAEA,CAAA,GAAM9C,eAAe,CAACT,IAAI,CAAEqD,KAAK,CAAChD,OAAO,CAAE,EAN/C,GAAGL,IAAI,IAAIqD,KAAK,CAAChD,OAAO,EAO5B,CAAC,CAEd,CAAC,CAAC,GAfGL,IAgBL,CACP,CAAC,CACC,CAAC,EACL,CAAC,CAEPvD,YAAY,eACTjB,IAAA,QAAKmH,SAAS,CAAC,OAAO,CAAAC,QAAA,cAClBlH,KAAA,QAAKiH,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC1BpH,IAAA,SAAMmH,SAAS,CAAC,OAAO,CAACY,OAAO,CAAE3C,UAAW,CAAAgC,QAAA,CAAC,MAE7C,CAAM,CAAC,cACPpH,IAAA,MAAAoH,QAAA,CAAInG,YAAY,CAAI,CAAC,EACpB,CAAC,CACL,CACR,cAEDjB,IAAA,OAAImH,SAAS,CAAC,SAAS,CAAE,CAAC,CAEzBtG,SAAS,cACNX,KAAA,CAAAE,SAAA,EAAAgH,QAAA,eACIpH,IAAA,OAAAoH,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BlH,KAAA,UAAOiH,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpH,IAAA,UAAAoH,QAAA,cACIlH,KAAA,OAAAkH,QAAA,eACIpH,IAAA,OAAI+H,OAAO,CAAEA,CAAA,GAAM/B,gBAAgB,CAAC,MAAM,CAAE,CAAAoB,QAAA,CAAC,MAAI,CAAI,CAAC,cACtDpH,IAAA,OAAI+H,OAAO,CAAEA,CAAA,GAAM/B,gBAAgB,CAAC,WAAW,CAAE,CAAAoB,QAAA,CAAC,OAAK,CAAI,CAAC,cAC5DpH,IAAA,OAAAoH,QAAA,CAAI,KAAG,CAAI,CAAC,cACZpH,IAAA,OAAI+H,OAAO,CAAEA,CAAA,GAAM/B,gBAAgB,CAAC,WAAW,CAAE,CAAAoB,QAAA,CAAC,OAAK,CAAI,CAAC,cAC5DpH,IAAA,OAAI+H,OAAO,CAAEA,CAAA,GAAM/B,gBAAgB,CAAC,QAAQ,CAAE,CAAAoB,QAAA,CAAC,QAAM,CAAI,CAAC,EAC1D,CAAC,CACF,CAAC,cACRpH,IAAA,UAAAoH,QAAA,CACK3G,YAAY,CAACmH,GAAG,CAAC,CAAClD,WAAW,CAAEtC,KAAK,gBACjClC,KAAA,CAACP,KAAK,CAACQ,QAAQ,EAAAiH,QAAA,eAEXlH,KAAA,OAAI6H,OAAO,CAAEA,CAAA,GAAM5F,SAAS,CAACC,KAAK,CAAE,CAAAgF,QAAA,eAChCpH,IAAA,OAAAoH,QAAA,CAAKX,UAAU,CAAC/B,WAAW,CAAClE,IAAI,CAAC,CAAK,CAAC,cACvCR,IAAA,OAAAoH,QAAA,CAAKT,UAAU,CAACjC,WAAW,CAACI,SAAS,CAAC,CAAK,CAAC,cAC5C9E,IAAA,OAAAoH,QAAA,CAAKT,UAAU,CAACjC,WAAW,CAACK,OAAO,CAAC,CAAK,CAAC,cAC1C/E,IAAA,OAAAoH,QAAA,CAAK1C,WAAW,CAACS,SAAS,CAAK,CAAC,cAChCnF,IAAA,OAAAoH,QAAA,CAAK1C,WAAW,CAACsD,MAAM,CAAK,CAAC,EAC7B,CAAC,CAGJzG,YAAY,CAACe,QAAQ,CAACF,KAAK,CAAC,eACzBpC,IAAA,OAAImH,SAAS,CAAC,cAAc,CAAAC,QAAA,cACxBpH,IAAA,OAAIiI,OAAO,CAAC,GAAG,CAAAb,QAAA,cACXlH,KAAA,QAAKiH,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7BlH,KAAA,MAAAkH,QAAA,eACIpH,IAAA,WAAAoH,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAAC1C,WAAW,CAACQ,IAAI,EACzC,CAAC,cACJhF,KAAA,MAAAkH,QAAA,eACIpH,IAAA,WAAAoH,QAAA,CAAQ,QAAM,CAAQ,CAAC,IAAC,CAAC1C,WAAW,CAAC5B,KAAK,EAC3C,CAAC,cACJ5C,KAAA,MAAAkH,QAAA,eACIpH,IAAA,WAAAoH,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAAC1C,WAAW,CAACwD,QAAQ,CAAC,QACrD,EAAG,CAAC,CACHxD,WAAW,CAACsD,MAAM,GAAK,WAAW,eAC/B9H,KAAA,MAAAkH,QAAA,eACIpH,IAAA,WAAAoH,QAAA,CAAQ,sBAAoB,CAAQ,CAAC,CAAC,GAAG,CACxC1C,WAAW,CAACoB,kBAAkB,EAChC,CACN,CACApB,WAAW,CAACsD,MAAM,GAAK,SAAS,eAC7BhI,IAAA,WACImH,SAAS,CAAC,eAAe,CACzBY,OAAO,CAAGI,CAAC,EAAK,CACZA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAE;AACrB/C,iBAAiB,CAACX,WAAW,CAAC2D,aAAa,CAAC,CAChD,CAAE,CAAAjB,QAAA,CACL,QAED,CAAQ,CACX,EACA,CAAC,CACN,CAAC,CACL,CACP,GA5CgB1C,WAAW,CAAC2D,aA6CjB,CACnB,CAAC,CACC,CAAC,EACL,CAAC,EACV,CAAC,cAEHrI,IAAA,MAAAoH,QAAA,CAAG,0CAAwC,CAAG,CACjD,EACA,CAAC,CAEd,CAEA,cAAe,CAAA/G,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}