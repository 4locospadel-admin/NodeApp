{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import\"./Reservation.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Reservation(){const[selectedDate,setSelectedDate]=useState(new Date());const[reservations,setReservations]=useState([]);const[courts,setCourts]=useState([]);const[userEmail,setUserEmail]=useState(null);const[sortField,setSortField]=useState(\"\");const[modalContent,setModalContent]=useState(null);const[sortOrder,setSortOrder]=useState(\"asc\");const[highlightedCells,setHighlightedCells]=useState({});const[expandedRows,setExpandedRows]=useState([]);const[tableReservations,setTableReservations]=useState([]);const[loading,setLoading]=useState(false);const times=Array.from({length:15},(_,i)=>`${String(8+i).padStart(2,\"0\")}:00`);const toggleRow=index=>{const clickedReservation=reservations[index];if(clickedReservation.Email===userEmail){// Collapse all other rows\nsetExpandedRows([index]);// Move the clicked reservation to the top of the list\nsetReservations(prevReservations=>{const updatedReservations=[...prevReservations];const[movedReservation]=updatedReservations.splice(index,1);updatedReservations.unshift(movedReservation);return updatedReservations;});// Scroll to the top of the list\nsetTimeout(()=>{document.querySelector(\".reservations-list\").scrollIntoView({behavior:\"smooth\"});},100);}};useEffect(()=>{// Fetch logged-in user from local storage\nconst storedUser=localStorage.getItem(\"user\");if(storedUser){const parsedUser=JSON.parse(storedUser);setUserEmail(parsedUser.Email);}fetchCourts();if(storedUser){fetchReservations(JSON.parse(storedUser).Email);}},[]);useEffect(()=>{console.log(\"Table Reservations updated:\",tableReservations);},[tableReservations]);const fetchCourts=()=>{fetch(\"/api/courts\").then(response=>{if(!response.ok){throw new Error(`HTTP error! Status: ${response.status}`);}return response.json();}).then(setCourts).catch(error=>console.error(\"Error fetching courts:\",error));};const fetchReservations=email=>{fetch(`/api/reservations?email=${encodeURIComponent(email)}`).then(response=>{if(!response.ok){throw new Error(`HTTP error! Status: ${response.status}`);}return response.json();}).then(setReservations).catch(error=>console.error(\"Error fetching reservations:\",error));};const fetchReservationsForDay=date=>{const localDate=new Date(date);const year=localDate.getFullYear();const month=String(localDate.getMonth()+1).padStart(2,\"0\");const day=String(localDate.getDate()).padStart(2,\"0\");const formattedDate=`${year}-${month}-${day}`;console.log(\"Formatted Date for API call:\",formattedDate);fetch(`/api/reservations/day?date=${formattedDate}`).then(response=>{if(!response.ok){throw new Error(`HTTP error! Status: ${response.status}`);}return response.json();}).then(data=>{console.log(\"Fetched reservations for the day:\",data);setTableReservations(data);// Ensure the table updates dynamically\n}).catch(error=>console.error(\"Error fetching reservations:\",error));};const handleDateChange=date=>{const localDate=new Date(date);localDate.setHours(0,0,0,0);console.log(\"Normalized Date selected:\",localDate);setSelectedDate(localDate);fetchReservationsForDay(localDate);};const getReservationStatus=(time,courtId)=>{const startDate=new Date(selectedDate);const[hours,minutes]=time.split(\":\").map(Number);startDate.setHours(hours,minutes,0,0);const now=new Date();// Current time for comparison\nif(startDate<now){return\"Past\";// Add \"Past\" status for times in the past\n}const reservation=tableReservations.find(res=>res.CourtID===courtId&&new Date(res.Date).toDateString()===selectedDate.toDateString()&&new Date(res.StartTime).getHours()<=startDate.getHours()&&new Date(res.EndTime).getHours()>startDate.getHours());if(!reservation||reservation.Status===\"Cancelled\")return\"Available\";return reservation.Email===userEmail?\"YourReservations\":\"Reserved\";};const handleCellClick=(time,courtId)=>{const startDate=new Date(selectedDate);const[hours,minutes]=time.split(\":\").map(Number);startDate.setHours(hours,minutes,0,0);const now=new Date();if(startDate<now){return;// Prevent click on past times\n}const reservationIndex=reservations.findIndex(res=>{const reservationDate=new Date(res.Date).toDateString();const selectedDateString=selectedDate.toDateString();const startTime=new Date(res.StartTime);const endTime=new Date(res.EndTime);const[hours,minutes]=time.split(\":\").map(Number);const cellTime=new Date(selectedDate);cellTime.setHours(hours,minutes,0,0);return res.CourtID===courtId&&reservationDate===selectedDateString&&startTime<=cellTime&&endTime>cellTime;});console.log(\"Reservations:\",reservations);console.log(\"Reservation Index:\",reservationIndex);if(reservationIndex!==-1){const reservation=reservations[reservationIndex];if(reservation.Email===userEmail){// Unpack the row and scroll into view\ntoggleRow(reservationIndex);// Scroll to the unpacked row\nsetTimeout(()=>{const rowElement=document.querySelector(`.reservations-list tbody tr:nth-child(${reservationIndex+1})`);if(rowElement){rowElement.scrollIntoView({behavior:\"smooth\",block:\"center\"});}},100);}else{alert(\"You cannot interact with reservations made by others.\");}}else{setModalContent(`No reservation exists for Court ${courtId} at ${time}`);}};const closeModal=()=>{setModalContent(null);setHighlightedCells({});};const cancelReservation=async id=>{const reason=prompt(\"Please provide a reason for cancellation:\");if(!reason){alert(\"Cancellation reason is required.\");return;}setLoading(true);// Start loading\ntry{const response=await fetch(`/api/reservations/${id}/cancel`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({CancellationReason:reason})});if(!response.ok)throw new Error(await response.text());alert(\"Reservation cancelled successfully.\");fetchReservations(userEmail);// Refresh reservations\nfetchReservationsForDay(selectedDate);// Refresh table reservations\n}catch(error){console.error(\"Error cancelling reservation:\",error);alert(\"Failed to cancel reservation.\");}finally{setLoading(false);// End loading\n}};const sortReservations=field=>{const newSortOrder=sortField===field&&sortOrder===\"asc\"?\"desc\":\"asc\";setSortField(field);setSortOrder(newSortOrder);const sortedReservations=[...reservations].sort((a,b)=>{const valueA=field===\"Date\"?new Date(a[field]):a[field];const valueB=field===\"Date\"?new Date(b[field]):b[field];return(valueA>valueB?1:-1)*(newSortOrder===\"asc\"?1:-1);});setReservations(sortedReservations);};const formatDate=date=>new Date(date).toLocaleDateString(\"en-GB\");const formatTime=timeString=>{try{const date=new Date(timeString);if(isNaN(date.getTime())){throw new Error(\"Invalid date\");}return date.toLocaleTimeString([],{hour:\"2-digit\",minute:\"2-digit\",hourCycle:'h23'});}catch(error){console.error(\"Invalid time format:\",timeString);return\"Invalid Time\";}};return/*#__PURE__*/_jsxs(\"div\",{className:\"reservation-page\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"date-picker\",children:/*#__PURE__*/_jsx(DatePicker,{selected:selectedDate,onChange:date=>handleDateChange(date),minDate:new Date(),maxDate:new Date().setMonth(new Date().getMonth()+2),dateFormat:\"EEEE, MMMM d, yyyy\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-item available\",children:\"Available\"}),/*#__PURE__*/_jsx(\"div\",{className:\"legend-item user-reserved\",children:\"Your Reservations\"}),/*#__PURE__*/_jsx(\"div\",{className:\"legend-item other-reserved\",children:\"Reserved\"})]}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-indicator\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})}),/*#__PURE__*/_jsxs(\"table\",{className:\"reservation-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Hour\"}),courts.map(court=>/*#__PURE__*/_jsx(\"th\",{children:court.CourtName},court.CourtID))]})}),/*#__PURE__*/_jsx(\"tbody\",{children:times.map(time=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"hour-cell\",children:time}),courts.map(court=>{const status=getReservationStatus(time,court.CourtID);const isClickable=status===\"Available\"||status===\"YourReservations\";return/*#__PURE__*/_jsx(\"td\",{className:`${status.toLowerCase()} ${highlightedCells[`${time}-${court.CourtID}`]?\"highlighted-cell\":\"\"}`,onClick:isClickable?()=>handleCellClick(time,court.CourtID):undefined,style:{cursor:isClickable?\"pointer\":\"not-allowed\"}},`${time}-${court.CourtID}`);})]},time))})]}),modalContent&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"close\",onClick:closeModal,children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"p\",{children:modalContent})]})}),/*#__PURE__*/_jsx(\"hr\",{className:\"divider\"}),userEmail?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Reservations\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"reservations-list\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{onClick:()=>sortReservations(\"Date\"),children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{onClick:()=>sortReservations(\"StartTime\"),children:\"Start\"}),/*#__PURE__*/_jsx(\"th\",{children:\"End\"}),/*#__PURE__*/_jsx(\"th\",{onClick:()=>sortReservations(\"CourtName\"),children:\"Court\"}),/*#__PURE__*/_jsx(\"th\",{onClick:()=>sortReservations(\"Status\"),children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:reservations.map((reservation,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"tr\",{onClick:()=>toggleRow(index),children:[/*#__PURE__*/_jsx(\"td\",{children:formatDate(reservation.Date)}),/*#__PURE__*/_jsx(\"td\",{children:formatTime(reservation.StartTime)}),/*#__PURE__*/_jsx(\"td\",{children:formatTime(reservation.EndTime)}),/*#__PURE__*/_jsx(\"td\",{children:reservation.CourtName}),/*#__PURE__*/_jsx(\"td\",{children:reservation.Status})]}),expandedRows.includes(index)&&/*#__PURE__*/_jsx(\"tr\",{className:\"expanded-row\",children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"expanded-content\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",reservation.Name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",reservation.Email]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Duration:\"}),\" \",reservation.Duration,\" hours\"]}),reservation.Status===\"Cancelled\"&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Cancellation Reason:\"}),\" \",reservation.CancellationReason]}),reservation.Status===\"Created\"&&/*#__PURE__*/_jsx(\"button\",{className:\"cancel-button\",onClick:e=>{e.stopPropagation();// Prevent row collapse\ncancelReservation(reservation.ReservationID);},children:\"Cancel\"})]})})})]},reservation.ReservationID))})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Please log in to view your reservations.\"})]});}export default Reservation;","map":{"version":3,"names":["React","useState","useEffect","DatePicker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Reservation","selectedDate","setSelectedDate","Date","reservations","setReservations","courts","setCourts","userEmail","setUserEmail","sortField","setSortField","modalContent","setModalContent","sortOrder","setSortOrder","highlightedCells","setHighlightedCells","expandedRows","setExpandedRows","tableReservations","setTableReservations","loading","setLoading","times","Array","from","length","_","i","String","padStart","toggleRow","index","clickedReservation","Email","prevReservations","updatedReservations","movedReservation","splice","unshift","setTimeout","document","querySelector","scrollIntoView","behavior","storedUser","localStorage","getItem","parsedUser","JSON","parse","fetchCourts","fetchReservations","console","log","fetch","then","response","ok","Error","status","json","catch","error","email","encodeURIComponent","fetchReservationsForDay","date","localDate","year","getFullYear","month","getMonth","day","getDate","formattedDate","data","handleDateChange","setHours","getReservationStatus","time","courtId","startDate","hours","minutes","split","map","Number","now","reservation","find","res","CourtID","toDateString","StartTime","getHours","EndTime","Status","handleCellClick","reservationIndex","findIndex","reservationDate","selectedDateString","startTime","endTime","cellTime","rowElement","block","alert","closeModal","cancelReservation","id","reason","prompt","method","headers","body","stringify","CancellationReason","text","sortReservations","field","newSortOrder","sortedReservations","sort","a","b","valueA","valueB","formatDate","toLocaleDateString","formatTime","timeString","isNaN","getTime","toLocaleTimeString","hour","minute","hourCycle","className","children","selected","onChange","minDate","maxDate","setMonth","dateFormat","court","CourtName","isClickable","toLowerCase","onClick","undefined","style","cursor","includes","colSpan","Name","Duration","e","stopPropagation","ReservationID"],"sources":["/Users/michalfloch/Desktop/MUNI/Master Thesis/src/NodeApp/frontend/src/pages/Reservation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./Reservation.css\";\n\nfunction Reservation() {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [reservations, setReservations] = useState([]);\n    const [courts, setCourts] = useState([]);\n    const [userEmail, setUserEmail] = useState(null);\n    const [sortField, setSortField] = useState(\"\");\n    const [modalContent, setModalContent] = useState(null);\n    const [sortOrder, setSortOrder] = useState(\"asc\");\n    const [highlightedCells, setHighlightedCells] = useState({});\n    const [expandedRows, setExpandedRows] = useState([]);\n    const [tableReservations, setTableReservations] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n\n    const times = Array.from({ length: 15 }, (_, i) => `${String(8 + i).padStart(2, \"0\")}:00`);\n\n    const toggleRow = (index) => {\n        const clickedReservation = reservations[index];\n    \n        if (clickedReservation.Email === userEmail) {\n            // Collapse all other rows\n            setExpandedRows([index]);\n    \n            // Move the clicked reservation to the top of the list\n            setReservations((prevReservations) => {\n                const updatedReservations = [...prevReservations];\n                const [movedReservation] = updatedReservations.splice(index, 1);\n                updatedReservations.unshift(movedReservation);\n                return updatedReservations;\n            });\n    \n            // Scroll to the top of the list\n            setTimeout(() => {\n                document.querySelector(\".reservations-list\").scrollIntoView({ behavior: \"smooth\" });\n            }, 100);\n        }\n    }; \n\n    useEffect(() => {\n        // Fetch logged-in user from local storage\n        const storedUser = localStorage.getItem(\"user\");\n        if (storedUser) {\n            const parsedUser = JSON.parse(storedUser);\n            setUserEmail(parsedUser.Email);\n        }\n\n        fetchCourts();\n\n        if (storedUser) {\n            fetchReservations(JSON.parse(storedUser).Email);\n        }\n    }, []);\n\n    useEffect(() => {\n        console.log(\"Table Reservations updated:\", tableReservations);\n    }, [tableReservations]);\n\n    const fetchCourts = () => {\n        fetch(\"/api/courts\")\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(setCourts)\n            .catch((error) => console.error(\"Error fetching courts:\", error));\n    };\n\n    const fetchReservations = (email) => {\n        fetch(`/api/reservations?email=${encodeURIComponent(email)}`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(setReservations)\n            .catch((error) => console.error(\"Error fetching reservations:\", error));\n    };\n\n    const fetchReservationsForDay = (date) => {\n        const localDate = new Date(date);\n        const year = localDate.getFullYear();\n        const month = String(localDate.getMonth() + 1).padStart(2, \"0\");\n        const day = String(localDate.getDate()).padStart(2, \"0\");\n    \n        const formattedDate = `${year}-${month}-${day}`;\n        console.log(\"Formatted Date for API call:\", formattedDate);\n    \n        fetch(`/api/reservations/day?date=${formattedDate}`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then((data) => {\n                console.log(\"Fetched reservations for the day:\", data);\n                setTableReservations(data); // Ensure the table updates dynamically\n            })\n            .catch((error) => console.error(\"Error fetching reservations:\", error));\n    };\n\n    const handleDateChange = (date) => {\n        const localDate = new Date(date);\n        localDate.setHours(0, 0, 0, 0);\n        console.log(\"Normalized Date selected:\", localDate);\n    \n        setSelectedDate(localDate);\n        fetchReservationsForDay(localDate);\n    };\n\n    const getReservationStatus = (time, courtId) => {\n        const startDate = new Date(selectedDate);\n        const [hours, minutes] = time.split(\":\").map(Number);\n        startDate.setHours(hours, minutes, 0, 0);\n    \n        const now = new Date(); // Current time for comparison\n        if (startDate < now) {\n            return \"Past\"; // Add \"Past\" status for times in the past\n        }\n    \n        const reservation = tableReservations.find(\n            (res) =>\n                res.CourtID === courtId &&\n                new Date(res.Date).toDateString() === selectedDate.toDateString() &&\n                new Date(res.StartTime).getHours() <= startDate.getHours() &&\n                new Date(res.EndTime).getHours() > startDate.getHours()\n        );\n    \n        if (!reservation || reservation.Status === \"Cancelled\") return \"Available\";\n        return reservation.Email === userEmail ? \"YourReservations\" : \"Reserved\";\n    };\n\n    const handleCellClick = (time, courtId) => {\n        const startDate = new Date(selectedDate);\n        const [hours, minutes] = time.split(\":\").map(Number);\n        startDate.setHours(hours, minutes, 0, 0);\n    \n        const now = new Date();\n        if (startDate < now) {\n            return; // Prevent click on past times\n        }\n    \n        const reservationIndex = reservations.findIndex((res) => {\n            const reservationDate = new Date(res.Date).toDateString();\n            const selectedDateString = selectedDate.toDateString();\n            \n            const startTime = new Date(res.StartTime);\n            const endTime = new Date(res.EndTime);\n        \n            const [hours, minutes] = time.split(\":\").map(Number);\n            const cellTime = new Date(selectedDate);\n            cellTime.setHours(hours, minutes, 0, 0);\n        \n            return (\n                res.CourtID === courtId &&\n                reservationDate === selectedDateString &&\n                startTime <= cellTime &&\n                endTime > cellTime\n            );\n        });\n        \n        console.log(\"Reservations:\", reservations);\n        console.log(\"Reservation Index:\", reservationIndex);\n    \n        if (reservationIndex !== -1) {\n            const reservation = reservations[reservationIndex];\n    \n            if (reservation.Email === userEmail) {\n                // Unpack the row and scroll into view\n                toggleRow(reservationIndex);\n    \n                // Scroll to the unpacked row\n                setTimeout(() => {\n                    const rowElement = document.querySelector(\n                        `.reservations-list tbody tr:nth-child(${reservationIndex + 1})`\n                    );\n                    if (rowElement) {\n                        rowElement.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n                    }\n                }, 100);\n            } else {\n                alert(\"You cannot interact with reservations made by others.\");\n            }\n        } else {\n            setModalContent(`No reservation exists for Court ${courtId} at ${time}`);\n        }\n    };\n\n    const closeModal = () => {\n        setModalContent(null);\n        setHighlightedCells({});\n    };\n\n\n    const cancelReservation = async (id) => {\n        const reason = prompt(\"Please provide a reason for cancellation:\");\n        if (!reason) {\n            alert(\"Cancellation reason is required.\");\n            return;\n        }\n    \n        setLoading(true); // Start loading\n    \n        try {\n            const response = await fetch(`/api/reservations/${id}/cancel`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ CancellationReason: reason }),\n            });\n    \n            if (!response.ok) throw new Error(await response.text());\n    \n            alert(\"Reservation cancelled successfully.\");\n            fetchReservations(userEmail); // Refresh reservations\n            fetchReservationsForDay(selectedDate); // Refresh table reservations\n        } catch (error) {\n            console.error(\"Error cancelling reservation:\", error);\n            alert(\"Failed to cancel reservation.\");\n        } finally {\n            setLoading(false); // End loading\n        }\n    };\n\n    const sortReservations = (field) => {\n        const newSortOrder = sortField === field && sortOrder === \"asc\" ? \"desc\" : \"asc\";\n        setSortField(field);\n        setSortOrder(newSortOrder);\n\n        const sortedReservations = [...reservations].sort((a, b) => {\n            const valueA = field === \"Date\" ? new Date(a[field]) : a[field];\n            const valueB = field === \"Date\" ? new Date(b[field]) : b[field];\n            return (valueA > valueB ? 1 : -1) * (newSortOrder === \"asc\" ? 1 : -1);\n        });\n\n        setReservations(sortedReservations);\n    };\n\n    const formatDate = (date) => new Date(date).toLocaleDateString(\"en-GB\");\n    const formatTime = (timeString) => {\n        try {\n            const date = new Date(timeString);\n            if (isNaN(date.getTime())) {\n                throw new Error(\"Invalid date\");\n            }\n            return date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" , hourCycle: 'h23'});\n        } catch (error) {\n            console.error(\"Invalid time format:\", timeString);\n            return \"Invalid Time\";\n        }\n    };\n\n    return (\n        <div className=\"reservation-page\">\n            <div className=\"date-picker\">\n                <DatePicker\n                    selected={selectedDate}\n                    onChange={(date) => handleDateChange(date)}\n                    minDate={new Date()}\n                    maxDate={new Date().setMonth(new Date().getMonth() + 2)}\n                    dateFormat=\"EEEE, MMMM d, yyyy\"\n                />\n            </div>\n\n            <div className=\"legend\">\n                <div className=\"legend-item available\">Available</div>\n                <div className=\"legend-item user-reserved\">Your Reservations</div>\n                <div className=\"legend-item other-reserved\">Reserved</div>\n            </div>\n\n            {loading && (\n                <div className=\"loading-indicator\">\n                    <p>Loading...</p>\n                </div>\n            )}\n\n            <table className=\"reservation-table\">\n                <thead>\n                    <tr>\n                        <th>Hour</th>\n                        {courts.map((court) => (\n                            <th key={court.CourtID}>{court.CourtName}</th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {times.map((time) => (\n                        <tr key={time}>\n                            <td className=\"hour-cell\">{time}</td>\n                            {courts.map((court) => {\n                                const status = getReservationStatus(time, court.CourtID);\n                                const isClickable = status === \"Available\" || status === \"YourReservations\";\n\n                                return (\n                                    <td\n                                        key={`${time}-${court.CourtID}`}\n                                        className={`${status.toLowerCase()} ${\n                                            highlightedCells[`${time}-${court.CourtID}`]\n                                                ? \"highlighted-cell\"\n                                                : \"\"\n                                        }`}\n                                        onClick={isClickable ? () => handleCellClick(time, court.CourtID) : undefined}\n                                        style={{ cursor: isClickable ? \"pointer\" : \"not-allowed\" }}\n                                    ></td>\n                                );\n                            })}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            {modalContent && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <span className=\"close\" onClick={closeModal}>\n                            &times;\n                        </span>\n                        <p>{modalContent}</p>\n                    </div>\n                </div>\n            )}\n\n            <hr className=\"divider\" />\n\n            {userEmail ? (\n                <>\n                    <h3>Your Reservations</h3>\n                    <table className=\"reservations-list\">\n                        <thead>\n                            <tr>\n                                <th onClick={() => sortReservations(\"Date\")}>Date</th>\n                                <th onClick={() => sortReservations(\"StartTime\")}>Start</th>\n                                <th>End</th>\n                                <th onClick={() => sortReservations(\"CourtName\")}>Court</th>\n                                <th onClick={() => sortReservations(\"Status\")}>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {reservations.map((reservation, index) => (\n                                <React.Fragment key={reservation.ReservationID}>\n                                    {/* Top-level row */}\n                                    <tr onClick={() => toggleRow(index)}>\n                                        <td>{formatDate(reservation.Date)}</td>\n                                        <td>{formatTime(reservation.StartTime)}</td>\n                                        <td>{formatTime(reservation.EndTime)}</td>\n                                        <td>{reservation.CourtName}</td>\n                                        <td>{reservation.Status}</td>\n                                    </tr>\n\n                                    {/* Expandable row */}\n                                    {expandedRows.includes(index) && (\n                                        <tr className=\"expanded-row\">\n                                            <td colSpan=\"5\">\n                                                <div className=\"expanded-content\">\n                                                    <p>\n                                                        <strong>Name:</strong> {reservation.Name}\n                                                    </p>\n                                                    <p>\n                                                        <strong>Email:</strong> {reservation.Email}\n                                                    </p>\n                                                    <p>\n                                                        <strong>Duration:</strong> {reservation.Duration} hours\n                                                    </p>\n                                                    {reservation.Status === \"Cancelled\" && (\n                                                        <p>\n                                                            <strong>Cancellation Reason:</strong>{\" \"}\n                                                            {reservation.CancellationReason}\n                                                        </p>\n                                                    )}\n                                                    {reservation.Status === \"Created\" && (\n                                                        <button\n                                                            className=\"cancel-button\"\n                                                            onClick={(e) => {\n                                                                e.stopPropagation(); // Prevent row collapse\n                                                                cancelReservation(reservation.ReservationID);\n                                                            }}\n                                                        >\n                                                            Cancel\n                                                        </button>\n                                                    )}\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </React.Fragment>\n                            ))}\n                        </tbody>\n                    </table>\n                </>\n            ) : (\n                <p>Please log in to view your reservations.</p>\n            )}\n        </div>\n    );\n}\n\nexport default Reservation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}