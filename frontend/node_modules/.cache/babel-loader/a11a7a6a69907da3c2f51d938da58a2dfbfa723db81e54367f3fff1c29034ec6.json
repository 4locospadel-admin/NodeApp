{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import\"./Reservation.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Reservation(){const[selectedDate,setSelectedDate]=useState(new Date());const[reservations,setReservations]=useState([]);const[courts,setCourts]=useState([]);const[userEmail,setUserEmail]=useState(null);const[userName,setUserName]=useState(null);const[sortField,setSortField]=useState(\"\");const[modalContent,setModalContent]=useState(null);const[sortOrder,setSortOrder]=useState(\"asc\");const[highlightedCells,setHighlightedCells]=useState({});const[expandedRows,setExpandedRows]=useState([]);const[tableReservations,setTableReservations]=useState([]);const[loading,setLoading]=useState(false);const[reservationModal,setReservationModal]=useState(null);const[confirmationModal,setConfirmationModal]=useState(null);const[selectedDuration,setSelectedDuration]=useState(1);const times=Array.from({length:15},(_,i)=>`${String(8+i).padStart(2,\"0\")}:00`);const toggleRow=index=>{setExpandedRows([index]);};useEffect(()=>{// Fetch logged-in user from local storage\nconst storedUser=localStorage.getItem(\"user\");if(storedUser){const parsedUser=JSON.parse(storedUser);setUserEmail(parsedUser.Email);setUserName(parsedUser.Name);}fetchCourts();if(storedUser){fetchReservations(JSON.parse(storedUser).Email);}},[]);useEffect(()=>{},[tableReservations]);const fetchCourts=()=>{fetch(\"/api/courts\").then(response=>{if(!response.ok){throw new Error(`HTTP error! Status: ${response.status}`);}return response.json();}).then(setCourts).catch(error=>console.error(\"Error fetching courts:\",error));};const fetchReservations=email=>{fetch(`/api/reservations?email=${encodeURIComponent(email)}`).then(response=>{if(!response.ok){throw new Error(`HTTP error! Status: ${response.status}`);}return response.json();}).then(setReservations).catch(error=>console.error(\"Error fetching reservations:\",error));};const fetchReservationsForDay=date=>{const localDate=new Date(date);const year=localDate.getFullYear();const month=String(localDate.getMonth()+1).padStart(2,\"0\");const day=String(localDate.getDate()).padStart(2,\"0\");const formattedDate=`${year}-${month}-${day}`;fetch(`/api/reservations/day?date=${formattedDate}`).then(response=>{if(!response.ok){throw new Error(`HTTP error! Status: ${response.status}`);}return response.json();}).then(data=>{setTableReservations(data);// Ensure the table updates dynamically\n}).catch(error=>console.error(\"Error fetching reservations:\",error));};const handleDateChange=date=>{const localDate=new Date(date);localDate.setHours(0,0,0,0);setSelectedDate(localDate);fetchReservationsForDay(localDate);};const getReservationStatus=(time,courtId)=>{const startDate=new Date(selectedDate);const[hours,minutes]=time.split(\":\").map(Number);startDate.setHours(hours,minutes,0,0);const now=new Date();// Current time for comparison\nif(startDate<now){return\"Past\";// Add \"Past\" status for times in the past\n}const reservation=tableReservations.find(res=>res.CourtID===courtId&&new Date(res.Date).toDateString()===selectedDate.toDateString()&&new Date(res.StartTime).getHours()<=startDate.getHours()&&new Date(res.EndTime).getHours()>startDate.getHours());if(!reservation||reservation.Status===\"Cancelled\")return\"Available\";return reservation.Email===userEmail?\"YourReservations\":\"Reserved\";};const handleCellClick=(time,court)=>{const startDate=new Date(selectedDate);const[hours,minutes]=time.split(\":\").map(Number);startDate.setHours(hours,minutes,0,0);const now=new Date();if(startDate<now){return;// Prevent click on past times\n}const reservationIndex=reservations.findIndex(res=>{const reservationDate=new Date(res.Date);reservationDate.setHours(0,0,0,0);const normalizedSelectedDate=new Date(selectedDate);normalizedSelectedDate.setHours(0,0,0,0);const isSameDate=formatDate(res.Date)===formatDate(normalizedSelectedDate);const[cellHours]=time.split(\":\").map(Number);const reservationStartHour=new Date(res.StartTime).getHours();const reservationEndHour=new Date(res.EndTime).getHours();return res.CourtID===court.CourtID&&isSameDate&&cellHours>=reservationStartHour&&cellHours<reservationEndHour;});if(reservationIndex!==-1){const reservation=reservations[reservationIndex];if(reservation.Email===userEmail){// Unpack the row and scroll into view\ntoggleRow(reservationIndex);// Scroll to the unpacked row\nsetTimeout(()=>{const rowElement=document.querySelector(`.reservations-list tbody tr:nth-child(${reservationIndex+1})`);if(rowElement){rowElement.scrollIntoView({behavior:\"smooth\",block:\"center\"});}},100);}else{alert(\"You cannot interact with reservations made by others.\");}}else if(!userEmail){setModalContent(\"Please log in to create a reservation.\");}else{// Open reservation creation modal\nsetReservationModal({courtId:court.CourtID,courtName:court.CourtName,date:formatDate(selectedDate),startTime:time});}};const closeModal=()=>{setModalContent(null);setHighlightedCells({});};const createReservation=async details=>{setLoading(true);try{const response=await fetch(\"/api/reservations\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({court:String(details.courtId),email:userEmail,name:userName,date:details.date,startTime:details.startTime,endTime:details.endTime})});if(!response.ok)throw new Error(await response.text());alert(\"Reservation created successfully.\");fetchReservations(userEmail);fetchReservationsForDay(selectedDate);}catch(error){console.error(\"Error creating reservation:\",error);alert(\"Failed to create reservation.\");}finally{setLoading(false);}};const cancelReservation=async id=>{const reason=prompt(\"Please provide a reason for cancellation:\");if(!reason){alert(\"Cancellation reason is required.\");return;}setLoading(true);// Start loading\ntry{const response=await fetch(`/api/reservations/${id}/cancel`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({CancellationReason:reason})});if(!response.ok)throw new Error(await response.text());alert(\"Reservation cancelled successfully.\");fetchReservations(userEmail);// Refresh reservations\nfetchReservationsForDay(selectedDate);// Refresh table reservations\n}catch(error){console.error(\"Error cancelling reservation:\",error);alert(\"Failed to cancel reservation.\");}finally{setLoading(false);// End loading\n}};const sortReservations=field=>{const newSortOrder=sortField===field&&sortOrder===\"asc\"?\"desc\":\"asc\";setSortField(field);setSortOrder(newSortOrder);const sortedReservations=[...reservations].sort((a,b)=>{const valueA=field===\"Date\"?new Date(a[field]):a[field];const valueB=field===\"Date\"?new Date(b[field]):b[field];return(valueA>valueB?1:-1)*(newSortOrder===\"asc\"?1:-1);});setReservations(sortedReservations);};const formatDate=date=>new Date(date).toLocaleDateString(\"en-GB\");const formatTime=timeString=>{try{const date=new Date(timeString);if(isNaN(date.getTime())){throw new Error(\"Invalid date\");}return date.toLocaleTimeString([],{hour:\"2-digit\",minute:\"2-digit\",hourCycle:'h23'});}catch(error){console.error(\"Invalid time format:\",timeString);return\"Invalid Time\";}};return/*#__PURE__*/_jsxs(\"div\",{className:\"reservation-page\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"date-picker\",children:/*#__PURE__*/_jsx(DatePicker,{selected:selectedDate,onChange:date=>handleDateChange(date),minDate:new Date(),maxDate:new Date().setMonth(new Date().getMonth()+2),dateFormat:\"EEEE, MMMM d, yyyy\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-item available\",children:\"Available\"}),/*#__PURE__*/_jsx(\"div\",{className:\"legend-item user-reserved\",children:\"Your Reservations\"}),/*#__PURE__*/_jsx(\"div\",{className:\"legend-item other-reserved\",children:\"Reserved\"})]}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-indicator\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})}),/*#__PURE__*/_jsxs(\"table\",{className:\"reservation-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Hour\"}),courts.map(court=>/*#__PURE__*/_jsx(\"th\",{children:court.CourtName},court.CourtID))]})}),/*#__PURE__*/_jsx(\"tbody\",{children:times.map(time=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"hour-cell\",children:time}),courts.map(court=>{const status=getReservationStatus(time,court.CourtID);const isClickable=status===\"Available\"||status===\"YourReservations\";return/*#__PURE__*/_jsx(\"td\",{className:`${status.toLowerCase()} ${highlightedCells[`${time}-${court.CourtID}`]?\"highlighted-cell\":\"\"}`,onClick:isClickable?()=>handleCellClick(time,court):undefined,style:{cursor:isClickable?\"pointer\":\"not-allowed\"}},`${time}-${court.CourtID}`);})]},time))})]}),modalContent&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"close\",onClick:closeModal,children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"p\",{children:modalContent})]})}),reservationModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create Reservation\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",reservationModal.date]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Start Time:\"}),\" \",reservationModal.startTime]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Court:\"}),\" \",reservationModal.courtName]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Duration (hours):\"}),/*#__PURE__*/_jsx(\"select\",{value:selectedDuration,onChange:e=>setSelectedDuration(Number(e.target.value)),children:[...Array(5).keys()].map(d=>/*#__PURE__*/_jsx(\"option\",{value:d+1,children:d+1},d+1))})]}),/*#__PURE__*/_jsx(\"button\",{className:\"cancel-button\",onClick:()=>setReservationModal(null),children:\"Close\"}),/*#__PURE__*/_jsx(\"button\",{className:\"confirm-button\",onClick:()=>{const startHour=Number(reservationModal.startTime.split(\":\")[0]);const endHour=startHour+selectedDuration;// Check if the end time exceeds the limit (23:00)\nif(endHour>23){alert(\"Invalid duration: Reservations cannot end after 23:00.\");return;// Stop the process if invalid\n}setConfirmationModal({...reservationModal,duration:selectedDuration,endTime:`${endHour}:00`// No need to calculate minutes since it always ends at 00\n});setReservationModal(null);},children:\"Confirm\"})]})}),confirmationModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Confirm Reservation\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",userName]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",userEmail]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",confirmationModal.date]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Start Time:\"}),\" \",confirmationModal.startTime]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"End Time:\"}),\" \",confirmationModal.endTime]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Court:\"}),\" \",confirmationModal.courtName]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Duration:\"}),\" \",confirmationModal.duration,\" hours\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"cancel-button\",onClick:()=>setConfirmationModal(null),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"confirm-button\",onClick:async()=>{await createReservation(confirmationModal);setConfirmationModal(null);},children:\"Create Reservation\"})]})}),/*#__PURE__*/_jsx(\"hr\",{className:\"divider\"}),userEmail?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Reservations\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"reservations-list\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{onClick:()=>sortReservations(\"Date\"),children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{onClick:()=>sortReservations(\"StartTime\"),children:\"Start\"}),/*#__PURE__*/_jsx(\"th\",{children:\"End\"}),/*#__PURE__*/_jsx(\"th\",{onClick:()=>sortReservations(\"CourtName\"),children:\"Court\"}),/*#__PURE__*/_jsx(\"th\",{onClick:()=>sortReservations(\"Status\"),children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:reservations.map((reservation,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"tr\",{onClick:()=>toggleRow(index),children:[/*#__PURE__*/_jsx(\"td\",{children:formatDate(reservation.Date)}),/*#__PURE__*/_jsx(\"td\",{children:formatTime(reservation.StartTime)}),/*#__PURE__*/_jsx(\"td\",{children:formatTime(reservation.EndTime)}),/*#__PURE__*/_jsx(\"td\",{children:reservation.CourtName}),/*#__PURE__*/_jsx(\"td\",{children:reservation.Status})]}),expandedRows.includes(index)&&/*#__PURE__*/_jsx(\"tr\",{className:\"expanded-row\",children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"expanded-content\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",reservation.Name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",reservation.Email]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Duration:\"}),\" \",reservation.Duration,\" hours\"]}),reservation.Status===\"Cancelled\"&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Cancellation Reason:\"}),\" \",reservation.CancellationReason]}),reservation.Status===\"Created\"&&/*#__PURE__*/_jsx(\"button\",{className:\"cancel-button\",onClick:e=>{e.stopPropagation();// Prevent row collapse\ncancelReservation(reservation.ReservationID);},children:\"Cancel\"})]})})})]},reservation.ReservationID))})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Please log in to view your reservations.\"})]});}export default Reservation;","map":{"version":3,"names":["React","useState","useEffect","DatePicker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Reservation","selectedDate","setSelectedDate","Date","reservations","setReservations","courts","setCourts","userEmail","setUserEmail","userName","setUserName","sortField","setSortField","modalContent","setModalContent","sortOrder","setSortOrder","highlightedCells","setHighlightedCells","expandedRows","setExpandedRows","tableReservations","setTableReservations","loading","setLoading","reservationModal","setReservationModal","confirmationModal","setConfirmationModal","selectedDuration","setSelectedDuration","times","Array","from","length","_","i","String","padStart","toggleRow","index","storedUser","localStorage","getItem","parsedUser","JSON","parse","Email","Name","fetchCourts","fetchReservations","fetch","then","response","ok","Error","status","json","catch","error","console","email","encodeURIComponent","fetchReservationsForDay","date","localDate","year","getFullYear","month","getMonth","day","getDate","formattedDate","data","handleDateChange","setHours","getReservationStatus","time","courtId","startDate","hours","minutes","split","map","Number","now","reservation","find","res","CourtID","toDateString","StartTime","getHours","EndTime","Status","handleCellClick","court","reservationIndex","findIndex","reservationDate","normalizedSelectedDate","isSameDate","formatDate","cellHours","reservationStartHour","reservationEndHour","setTimeout","rowElement","document","querySelector","scrollIntoView","behavior","block","alert","courtName","CourtName","startTime","closeModal","createReservation","details","method","headers","body","stringify","name","endTime","text","cancelReservation","id","reason","prompt","CancellationReason","sortReservations","field","newSortOrder","sortedReservations","sort","a","b","valueA","valueB","toLocaleDateString","formatTime","timeString","isNaN","getTime","toLocaleTimeString","hour","minute","hourCycle","className","children","selected","onChange","minDate","maxDate","setMonth","dateFormat","isClickable","toLowerCase","onClick","undefined","style","cursor","value","e","target","keys","d","startHour","endHour","duration","includes","colSpan","Duration","stopPropagation","ReservationID"],"sources":["/Users/michalfloch/Desktop/MUNI/Master Thesis/src/NodeApp/frontend/src/pages/Reservation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./Reservation.css\";\n\nfunction Reservation() {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [reservations, setReservations] = useState([]);\n    const [courts, setCourts] = useState([]);\n    const [userEmail, setUserEmail] = useState(null);\n    const [userName, setUserName] = useState(null);\n    const [sortField, setSortField] = useState(\"\");\n    const [modalContent, setModalContent] = useState(null);\n    const [sortOrder, setSortOrder] = useState(\"asc\");\n    const [highlightedCells, setHighlightedCells] = useState({});\n    const [expandedRows, setExpandedRows] = useState([]);\n    const [tableReservations, setTableReservations] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [reservationModal, setReservationModal] = useState(null);\n    const [confirmationModal, setConfirmationModal] = useState(null);\n    const [selectedDuration, setSelectedDuration] = useState(1);\n\n\n    const times = Array.from({ length: 15 }, (_, i) => `${String(8 + i).padStart(2, \"0\")}:00`);\n\n    const toggleRow = (index) => {\n        setExpandedRows([index]);\n    }; \n\n    useEffect(() => {\n        // Fetch logged-in user from local storage\n        const storedUser = localStorage.getItem(\"user\");\n        if (storedUser) {\n            const parsedUser = JSON.parse(storedUser);\n            setUserEmail(parsedUser.Email);\n            setUserName(parsedUser.Name);\n        }\n\n        fetchCourts();\n\n        if (storedUser) {\n            fetchReservations(JSON.parse(storedUser).Email);\n        }\n    }, []);\n\n    useEffect(() => {\n    }, [tableReservations]);\n\n    const fetchCourts = () => {\n        fetch(\"/api/courts\")\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(setCourts)\n            .catch((error) => console.error(\"Error fetching courts:\", error));\n    };\n\n    const fetchReservations = (email) => {\n        fetch(`/api/reservations?email=${encodeURIComponent(email)}`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(setReservations)\n            .catch((error) => console.error(\"Error fetching reservations:\", error));\n    };\n\n    const fetchReservationsForDay = (date) => {\n        const localDate = new Date(date);\n        const year = localDate.getFullYear();\n        const month = String(localDate.getMonth() + 1).padStart(2, \"0\");\n        const day = String(localDate.getDate()).padStart(2, \"0\");\n    \n        const formattedDate = `${year}-${month}-${day}`;\n    \n        fetch(`/api/reservations/day?date=${formattedDate}`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then((data) => {\n                setTableReservations(data); // Ensure the table updates dynamically\n            })\n            .catch((error) => console.error(\"Error fetching reservations:\", error));\n    };\n\n    const handleDateChange = (date) => {\n        const localDate = new Date(date);\n        localDate.setHours(0, 0, 0, 0);\n    \n        setSelectedDate(localDate);\n        fetchReservationsForDay(localDate);\n    };\n\n    const getReservationStatus = (time, courtId) => {\n        const startDate = new Date(selectedDate);\n        const [hours, minutes] = time.split(\":\").map(Number);\n        startDate.setHours(hours, minutes, 0, 0);\n    \n        const now = new Date(); // Current time for comparison\n        if (startDate < now) {\n            return \"Past\"; // Add \"Past\" status for times in the past\n        }\n    \n        const reservation = tableReservations.find(\n            (res) =>\n                res.CourtID === courtId &&\n                new Date(res.Date).toDateString() === selectedDate.toDateString() &&\n                new Date(res.StartTime).getHours() <= startDate.getHours() &&\n                new Date(res.EndTime).getHours() > startDate.getHours()\n        );\n    \n        if (!reservation || reservation.Status === \"Cancelled\") return \"Available\";\n        return reservation.Email === userEmail ? \"YourReservations\" : \"Reserved\";\n    };\n\n    const handleCellClick = (time, court) => {\n        const startDate = new Date(selectedDate);\n        const [hours, minutes] = time.split(\":\").map(Number);\n        startDate.setHours(hours, minutes, 0, 0);\n    \n        const now = new Date();\n        if (startDate < now) {\n            return; // Prevent click on past times\n        }\n    \n        const reservationIndex = reservations.findIndex((res) => {\n            const reservationDate = new Date(res.Date);\n            reservationDate.setHours(0, 0, 0, 0);\n    \n            const normalizedSelectedDate = new Date(selectedDate);\n            normalizedSelectedDate.setHours(0, 0, 0, 0);\n    \n            const isSameDate = formatDate(res.Date) === formatDate(normalizedSelectedDate);\n            const [cellHours] = time.split(\":\").map(Number);\n            const reservationStartHour = new Date(res.StartTime).getHours();\n            const reservationEndHour = new Date(res.EndTime).getHours();\n    \n            return (\n                res.CourtID === court.CourtID &&\n                isSameDate &&\n                cellHours >= reservationStartHour &&\n                cellHours < reservationEndHour\n            );\n        });\n    \n        if (reservationIndex !== -1) {\n            const reservation = reservations[reservationIndex];\n    \n            if (reservation.Email === userEmail) {\n                // Unpack the row and scroll into view\n                toggleRow(reservationIndex);\n    \n                // Scroll to the unpacked row\n                setTimeout(() => {\n                    const rowElement = document.querySelector(\n                        `.reservations-list tbody tr:nth-child(${reservationIndex + 1})`\n                    );\n                    if (rowElement) {\n                        rowElement.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n                    }\n                }, 100);\n            } else {\n                alert(\"You cannot interact with reservations made by others.\");\n            }\n        } else if (!userEmail) {\n            setModalContent(\"Please log in to create a reservation.\");\n        } else {\n            // Open reservation creation modal\n            setReservationModal({\n                courtId: court.CourtID,\n                courtName: court.CourtName,\n                date: formatDate(selectedDate),\n                startTime: time,\n            });\n        }\n    };\n\n    const closeModal = () => {\n        setModalContent(null);\n        setHighlightedCells({});\n    };\n\n    const createReservation = async (details) => {\n        setLoading(true);\n    \n        try {\n            const response = await fetch(\"/api/reservations\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    court: String(details.courtId),\n                    email: userEmail,\n                    name: userName,\n                    date: details.date,\n                    startTime: details.startTime,\n                    endTime: details.endTime,\n                }),\n            });\n    \n            if (!response.ok) throw new Error(await response.text());\n    \n            alert(\"Reservation created successfully.\");\n            fetchReservations(userEmail);\n            fetchReservationsForDay(selectedDate);\n        } catch (error) {\n            console.error(\"Error creating reservation:\", error);\n            alert(\"Failed to create reservation.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const cancelReservation = async (id) => {\n        const reason = prompt(\"Please provide a reason for cancellation:\");\n        if (!reason) {\n            alert(\"Cancellation reason is required.\");\n            return;\n        }\n    \n        setLoading(true); // Start loading\n    \n        try {\n            const response = await fetch(`/api/reservations/${id}/cancel`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ CancellationReason: reason }),\n            });\n    \n            if (!response.ok) throw new Error(await response.text());\n    \n            alert(\"Reservation cancelled successfully.\");\n            fetchReservations(userEmail); // Refresh reservations\n            fetchReservationsForDay(selectedDate); // Refresh table reservations\n        } catch (error) {\n            console.error(\"Error cancelling reservation:\", error);\n            alert(\"Failed to cancel reservation.\");\n        } finally {\n            setLoading(false); // End loading\n        }\n    };\n\n    const sortReservations = (field) => {\n        const newSortOrder = sortField === field && sortOrder === \"asc\" ? \"desc\" : \"asc\";\n        setSortField(field);\n        setSortOrder(newSortOrder);\n\n        const sortedReservations = [...reservations].sort((a, b) => {\n            const valueA = field === \"Date\" ? new Date(a[field]) : a[field];\n            const valueB = field === \"Date\" ? new Date(b[field]) : b[field];\n            return (valueA > valueB ? 1 : -1) * (newSortOrder === \"asc\" ? 1 : -1);\n        });\n\n        setReservations(sortedReservations);\n    };\n\n    const formatDate = (date) => new Date(date).toLocaleDateString(\"en-GB\");\n    const formatTime = (timeString) => {\n        try {\n            const date = new Date(timeString);\n            if (isNaN(date.getTime())) {\n                throw new Error(\"Invalid date\");\n            }\n            return date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" , hourCycle: 'h23'});\n        } catch (error) {\n            console.error(\"Invalid time format:\", timeString);\n            return \"Invalid Time\";\n        }\n    };\n\n    return (\n        <div className=\"reservation-page\">\n            <div className=\"date-picker\">\n                <DatePicker\n                    selected={selectedDate}\n                    onChange={(date) => handleDateChange(date)}\n                    minDate={new Date()}\n                    maxDate={new Date().setMonth(new Date().getMonth() + 2)}\n                    dateFormat=\"EEEE, MMMM d, yyyy\"\n                />\n            </div>\n\n            <div className=\"legend\">\n                <div className=\"legend-item available\">Available</div>\n                <div className=\"legend-item user-reserved\">Your Reservations</div>\n                <div className=\"legend-item other-reserved\">Reserved</div>\n            </div>\n\n            {loading && (\n                <div className=\"loading-indicator\">\n                    <p>Loading...</p>\n                </div>\n            )}\n\n            <table className=\"reservation-table\">\n                <thead>\n                    <tr>\n                        <th>Hour</th>\n                        {courts.map((court) => (\n                            <th key={court.CourtID}>{court.CourtName}</th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {times.map((time) => (\n                        <tr key={time}>\n                            <td className=\"hour-cell\">{time}</td>\n                            {courts.map((court) => {\n                                const status = getReservationStatus(time, court.CourtID);\n                                const isClickable = status === \"Available\" || status === \"YourReservations\";\n\n                                return (\n                                    <td\n                                        key={`${time}-${court.CourtID}`}\n                                        className={`${status.toLowerCase()} ${\n                                            highlightedCells[`${time}-${court.CourtID}`]\n                                                ? \"highlighted-cell\"\n                                                : \"\"\n                                        }`}\n                                        onClick={isClickable ? () => handleCellClick(time, court) : undefined}\n                                        style={{ cursor: isClickable ? \"pointer\" : \"not-allowed\" }}\n                                    ></td>\n                                );\n                            })}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            {modalContent && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <span className=\"close\" onClick={closeModal}>\n                            &times;\n                        </span>\n                        <p>{modalContent}</p>\n                    </div>\n                </div>\n            )}\n\n            {reservationModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Create Reservation</h3>\n                        <p><strong>Date:</strong> {reservationModal.date}</p>\n                        <p><strong>Start Time:</strong> {reservationModal.startTime}</p>\n                        <p><strong>Court:</strong> {reservationModal.courtName}</p>\n                        \n                        <label>\n                            <strong>Duration (hours):</strong>\n                            <select\n                                value={selectedDuration}\n                                onChange={(e) => setSelectedDuration(Number(e.target.value))}\n                            >\n                                {[...Array(5).keys()].map((d) => (\n                                    <option key={d + 1} value={d + 1}>\n                                        {d + 1}\n                                    </option>\n                                ))}\n                            </select>\n                        </label>\n\n                        <button className=\"cancel-button\" onClick={() => setReservationModal(null)}>Close</button>\n                        <button\n                            className=\"confirm-button\"\n                            onClick={() => {\n                                const startHour = Number(reservationModal.startTime.split(\":\")[0]);\n                                const endHour = startHour + selectedDuration;\n\n                                // Check if the end time exceeds the limit (23:00)\n                                if (endHour > 23) {\n                                    alert(\"Invalid duration: Reservations cannot end after 23:00.\");\n                                    return; // Stop the process if invalid\n                                }\n\n                                setConfirmationModal({\n                                    ...reservationModal,\n                                    duration: selectedDuration,\n                                    endTime: `${endHour}:00`, // No need to calculate minutes since it always ends at 00\n                                });\n\n                                setReservationModal(null);\n                            }}\n                        >\n                            Confirm\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            {confirmationModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h3>Confirm Reservation</h3>\n                        <p><strong>Name:</strong> {userName}</p>\n                        <p><strong>Email:</strong> {userEmail}</p>\n                        <p><strong>Date:</strong> {confirmationModal.date}</p>\n                        <p><strong>Start Time:</strong> {confirmationModal.startTime}</p>\n                        <p><strong>End Time:</strong> {confirmationModal.endTime}</p>\n                        <p><strong>Court:</strong> {confirmationModal.courtName}</p>\n                        <p><strong>Duration:</strong> {confirmationModal.duration} hours</p>\n\n                        <button className=\"cancel-button\" onClick={() => setConfirmationModal(null)}>Cancel</button>\n                        <button className=\"confirm-button\"\n                            onClick={async () => {\n                                await createReservation(confirmationModal);\n                                setConfirmationModal(null);\n                            }}\n                        >\n                            Create Reservation\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            <hr className=\"divider\" />\n\n            {userEmail ? (\n                <>\n                    <h3>Your Reservations</h3>\n                    <table className=\"reservations-list\">\n                        <thead>\n                            <tr>\n                                <th onClick={() => sortReservations(\"Date\")}>Date</th>\n                                <th onClick={() => sortReservations(\"StartTime\")}>Start</th>\n                                <th>End</th>\n                                <th onClick={() => sortReservations(\"CourtName\")}>Court</th>\n                                <th onClick={() => sortReservations(\"Status\")}>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {reservations.map((reservation, index) => (\n                                <React.Fragment key={reservation.ReservationID}>\n                                    {/* Top-level row */}\n                                    <tr onClick={() => toggleRow(index)}>\n                                        <td>{formatDate(reservation.Date)}</td>\n                                        <td>{formatTime(reservation.StartTime)}</td>\n                                        <td>{formatTime(reservation.EndTime)}</td>\n                                        <td>{reservation.CourtName}</td>\n                                        <td>{reservation.Status}</td>\n                                    </tr>\n\n                                    {/* Expandable row */}\n                                    {expandedRows.includes(index) && (\n                                        <tr className=\"expanded-row\">\n                                            <td colSpan=\"5\">\n                                                <div className=\"expanded-content\">\n                                                    <p>\n                                                        <strong>Name:</strong> {reservation.Name}\n                                                    </p>\n                                                    <p>\n                                                        <strong>Email:</strong> {reservation.Email}\n                                                    </p>\n                                                    <p>\n                                                        <strong>Duration:</strong> {reservation.Duration} hours\n                                                    </p>\n                                                    {reservation.Status === \"Cancelled\" && (\n                                                        <p>\n                                                            <strong>Cancellation Reason:</strong>{\" \"}\n                                                            {reservation.CancellationReason}\n                                                        </p>\n                                                    )}\n                                                    {reservation.Status === \"Created\" && (\n                                                        <button\n                                                            className=\"cancel-button\"\n                                                            onClick={(e) => {\n                                                                e.stopPropagation(); // Prevent row collapse\n                                                                cancelReservation(reservation.ReservationID);\n                                                            }}\n                                                        >\n                                                            Cancel\n                                                        </button>\n                                                    )}\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    )}\n                                </React.Fragment>\n                            ))}\n                        </tbody>\n                    </table>\n                </>\n            ) : (\n                <p>Please log in to view your reservations.</p>\n            )}\n        </div>\n    );\n}\n\nexport default Reservation;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CACzC,MAAO,4CAA4C,CACnD,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE3B,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACnB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGX,QAAQ,CAAC,GAAI,CAAAY,IAAI,CAAC,CAAC,CAAC,CAC5D,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACe,MAAM,CAAEC,SAAS,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACiB,SAAS,CAAEC,YAAY,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACmB,QAAQ,CAAEC,WAAW,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACqB,SAAS,CAAEC,YAAY,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACuB,YAAY,CAAEC,eAAe,CAAC,CAAGxB,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACyB,SAAS,CAAEC,YAAY,CAAC,CAAG1B,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAC2B,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC5D,KAAM,CAAC6B,YAAY,CAAEC,eAAe,CAAC,CAAG9B,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAAC+B,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACiC,OAAO,CAAEC,UAAU,CAAC,CAAGlC,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACmC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGpC,QAAQ,CAAC,IAAI,CAAC,CAC9D,KAAM,CAACqC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGtC,QAAQ,CAAC,IAAI,CAAC,CAChE,KAAM,CAACuC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGxC,QAAQ,CAAC,CAAC,CAAC,CAG3D,KAAM,CAAAyC,KAAK,CAAGC,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAE,CAACC,CAAC,CAAEC,CAAC,GAAK,GAAGC,MAAM,CAAC,CAAC,CAAGD,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,KAAK,CAAC,CAE1F,KAAM,CAAAC,SAAS,CAAIC,KAAK,EAAK,CACzBpB,eAAe,CAAC,CAACoB,KAAK,CAAC,CAAC,CAC5B,CAAC,CAEDjD,SAAS,CAAC,IAAM,CACZ;AACA,KAAM,CAAAkD,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC/C,GAAIF,UAAU,CAAE,CACZ,KAAM,CAAAG,UAAU,CAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CACzCjC,YAAY,CAACoC,UAAU,CAACG,KAAK,CAAC,CAC9BrC,WAAW,CAACkC,UAAU,CAACI,IAAI,CAAC,CAChC,CAEAC,WAAW,CAAC,CAAC,CAEb,GAAIR,UAAU,CAAE,CACZS,iBAAiB,CAACL,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAACM,KAAK,CAAC,CACnD,CACJ,CAAC,CAAE,EAAE,CAAC,CAENxD,SAAS,CAAC,IAAM,CAChB,CAAC,CAAE,CAAC8B,iBAAiB,CAAC,CAAC,CAEvB,KAAM,CAAA4B,WAAW,CAAGA,CAAA,GAAM,CACtBE,KAAK,CAAC,aAAa,CAAC,CACfC,IAAI,CAAEC,QAAQ,EAAK,CAChB,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC,CAC7D,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC1B,CAAC,CAAC,CACDL,IAAI,CAAC9C,SAAS,CAAC,CACfoD,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAAC,CACzE,CAAC,CAED,KAAM,CAAAT,iBAAiB,CAAIW,KAAK,EAAK,CACjCV,KAAK,CAAC,2BAA2BW,kBAAkB,CAACD,KAAK,CAAC,EAAE,CAAC,CACxDT,IAAI,CAAEC,QAAQ,EAAK,CAChB,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC,CAC7D,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC1B,CAAC,CAAC,CACDL,IAAI,CAAChD,eAAe,CAAC,CACrBsD,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CAAC,CAC/E,CAAC,CAED,KAAM,CAAAI,uBAAuB,CAAIC,IAAI,EAAK,CACtC,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAA/D,IAAI,CAAC8D,IAAI,CAAC,CAChC,KAAM,CAAAE,IAAI,CAAGD,SAAS,CAACE,WAAW,CAAC,CAAC,CACpC,KAAM,CAAAC,KAAK,CAAG/B,MAAM,CAAC4B,SAAS,CAACI,QAAQ,CAAC,CAAC,CAAG,CAAC,CAAC,CAAC/B,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAC/D,KAAM,CAAAgC,GAAG,CAAGjC,MAAM,CAAC4B,SAAS,CAACM,OAAO,CAAC,CAAC,CAAC,CAACjC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAExD,KAAM,CAAAkC,aAAa,CAAG,GAAGN,IAAI,IAAIE,KAAK,IAAIE,GAAG,EAAE,CAE/CnB,KAAK,CAAC,8BAA8BqB,aAAa,EAAE,CAAC,CAC/CpB,IAAI,CAAEC,QAAQ,EAAK,CAChB,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC,CAC7D,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC1B,CAAC,CAAC,CACDL,IAAI,CAAEqB,IAAI,EAAK,CACZnD,oBAAoB,CAACmD,IAAI,CAAC,CAAE;AAChC,CAAC,CAAC,CACDf,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CAAC,CAC/E,CAAC,CAED,KAAM,CAAAe,gBAAgB,CAAIV,IAAI,EAAK,CAC/B,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAA/D,IAAI,CAAC8D,IAAI,CAAC,CAChCC,SAAS,CAACU,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAE9B1E,eAAe,CAACgE,SAAS,CAAC,CAC1BF,uBAAuB,CAACE,SAAS,CAAC,CACtC,CAAC,CAED,KAAM,CAAAW,oBAAoB,CAAGA,CAACC,IAAI,CAAEC,OAAO,GAAK,CAC5C,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAA7E,IAAI,CAACF,YAAY,CAAC,CACxC,KAAM,CAACgF,KAAK,CAAEC,OAAO,CAAC,CAAGJ,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CACpDL,SAAS,CAACJ,QAAQ,CAACK,KAAK,CAAEC,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,CAExC,KAAM,CAAAI,GAAG,CAAG,GAAI,CAAAnF,IAAI,CAAC,CAAC,CAAE;AACxB,GAAI6E,SAAS,CAAGM,GAAG,CAAE,CACjB,MAAO,MAAM,CAAE;AACnB,CAEA,KAAM,CAAAC,WAAW,CAAGjE,iBAAiB,CAACkE,IAAI,CACrCC,GAAG,EACAA,GAAG,CAACC,OAAO,GAAKX,OAAO,EACvB,GAAI,CAAA5E,IAAI,CAACsF,GAAG,CAACtF,IAAI,CAAC,CAACwF,YAAY,CAAC,CAAC,GAAK1F,YAAY,CAAC0F,YAAY,CAAC,CAAC,EACjE,GAAI,CAAAxF,IAAI,CAACsF,GAAG,CAACG,SAAS,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAIb,SAAS,CAACa,QAAQ,CAAC,CAAC,EAC1D,GAAI,CAAA1F,IAAI,CAACsF,GAAG,CAACK,OAAO,CAAC,CAACD,QAAQ,CAAC,CAAC,CAAGb,SAAS,CAACa,QAAQ,CAAC,CAC9D,CAAC,CAED,GAAI,CAACN,WAAW,EAAIA,WAAW,CAACQ,MAAM,GAAK,WAAW,CAAE,MAAO,WAAW,CAC1E,MAAO,CAAAR,WAAW,CAACvC,KAAK,GAAKxC,SAAS,CAAG,kBAAkB,CAAG,UAAU,CAC5E,CAAC,CAED,KAAM,CAAAwF,eAAe,CAAGA,CAAClB,IAAI,CAAEmB,KAAK,GAAK,CACrC,KAAM,CAAAjB,SAAS,CAAG,GAAI,CAAA7E,IAAI,CAACF,YAAY,CAAC,CACxC,KAAM,CAACgF,KAAK,CAAEC,OAAO,CAAC,CAAGJ,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CACpDL,SAAS,CAACJ,QAAQ,CAACK,KAAK,CAAEC,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,CAExC,KAAM,CAAAI,GAAG,CAAG,GAAI,CAAAnF,IAAI,CAAC,CAAC,CACtB,GAAI6E,SAAS,CAAGM,GAAG,CAAE,CACjB,OAAQ;AACZ,CAEA,KAAM,CAAAY,gBAAgB,CAAG9F,YAAY,CAAC+F,SAAS,CAAEV,GAAG,EAAK,CACrD,KAAM,CAAAW,eAAe,CAAG,GAAI,CAAAjG,IAAI,CAACsF,GAAG,CAACtF,IAAI,CAAC,CAC1CiG,eAAe,CAACxB,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAEpC,KAAM,CAAAyB,sBAAsB,CAAG,GAAI,CAAAlG,IAAI,CAACF,YAAY,CAAC,CACrDoG,sBAAsB,CAACzB,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAE3C,KAAM,CAAA0B,UAAU,CAAGC,UAAU,CAACd,GAAG,CAACtF,IAAI,CAAC,GAAKoG,UAAU,CAACF,sBAAsB,CAAC,CAC9E,KAAM,CAACG,SAAS,CAAC,CAAG1B,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CAC/C,KAAM,CAAAoB,oBAAoB,CAAG,GAAI,CAAAtG,IAAI,CAACsF,GAAG,CAACG,SAAS,CAAC,CAACC,QAAQ,CAAC,CAAC,CAC/D,KAAM,CAAAa,kBAAkB,CAAG,GAAI,CAAAvG,IAAI,CAACsF,GAAG,CAACK,OAAO,CAAC,CAACD,QAAQ,CAAC,CAAC,CAE3D,MACI,CAAAJ,GAAG,CAACC,OAAO,GAAKO,KAAK,CAACP,OAAO,EAC7BY,UAAU,EACVE,SAAS,EAAIC,oBAAoB,EACjCD,SAAS,CAAGE,kBAAkB,CAEtC,CAAC,CAAC,CAEF,GAAIR,gBAAgB,GAAK,CAAC,CAAC,CAAE,CACzB,KAAM,CAAAX,WAAW,CAAGnF,YAAY,CAAC8F,gBAAgB,CAAC,CAElD,GAAIX,WAAW,CAACvC,KAAK,GAAKxC,SAAS,CAAE,CACjC;AACAgC,SAAS,CAAC0D,gBAAgB,CAAC,CAE3B;AACAS,UAAU,CAAC,IAAM,CACb,KAAM,CAAAC,UAAU,CAAGC,QAAQ,CAACC,aAAa,CACrC,yCAAyCZ,gBAAgB,CAAG,CAAC,GACjE,CAAC,CACD,GAAIU,UAAU,CAAE,CACZA,UAAU,CAACG,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAQ,CAAEC,KAAK,CAAE,QAAS,CAAC,CAAC,CACtE,CACJ,CAAC,CAAE,GAAG,CAAC,CACX,CAAC,IAAM,CACHC,KAAK,CAAC,uDAAuD,CAAC,CAClE,CACJ,CAAC,IAAM,IAAI,CAAC1G,SAAS,CAAE,CACnBO,eAAe,CAAC,wCAAwC,CAAC,CAC7D,CAAC,IAAM,CACH;AACAY,mBAAmB,CAAC,CAChBoD,OAAO,CAAEkB,KAAK,CAACP,OAAO,CACtByB,SAAS,CAAElB,KAAK,CAACmB,SAAS,CAC1BnD,IAAI,CAAEsC,UAAU,CAACtG,YAAY,CAAC,CAC9BoH,SAAS,CAAEvC,IACf,CAAC,CAAC,CACN,CACJ,CAAC,CAED,KAAM,CAAAwC,UAAU,CAAGA,CAAA,GAAM,CACrBvG,eAAe,CAAC,IAAI,CAAC,CACrBI,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAC3B,CAAC,CAED,KAAM,CAAAoG,iBAAiB,CAAG,KAAO,CAAAC,OAAO,EAAK,CACzC/F,UAAU,CAAC,IAAI,CAAC,CAEhB,GAAI,CACA,KAAM,CAAA6B,QAAQ,CAAG,KAAM,CAAAF,KAAK,CAAC,mBAAmB,CAAE,CAC9CqE,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAE7E,IAAI,CAAC8E,SAAS,CAAC,CACjB3B,KAAK,CAAE3D,MAAM,CAACkF,OAAO,CAACzC,OAAO,CAAC,CAC9BjB,KAAK,CAAEtD,SAAS,CAChBqH,IAAI,CAAEnH,QAAQ,CACduD,IAAI,CAAEuD,OAAO,CAACvD,IAAI,CAClBoD,SAAS,CAAEG,OAAO,CAACH,SAAS,CAC5BS,OAAO,CAAEN,OAAO,CAACM,OACrB,CAAC,CACL,CAAC,CAAC,CAEF,GAAI,CAACxE,QAAQ,CAACC,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,KAAM,CAAAF,QAAQ,CAACyE,IAAI,CAAC,CAAC,CAAC,CAExDb,KAAK,CAAC,mCAAmC,CAAC,CAC1C/D,iBAAiB,CAAC3C,SAAS,CAAC,CAC5BwD,uBAAuB,CAAC/D,YAAY,CAAC,CACzC,CAAE,MAAO2D,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDsD,KAAK,CAAC,+BAA+B,CAAC,CAC1C,CAAC,OAAS,CACNzF,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED,KAAM,CAAAuG,iBAAiB,CAAG,KAAO,CAAAC,EAAE,EAAK,CACpC,KAAM,CAAAC,MAAM,CAAGC,MAAM,CAAC,2CAA2C,CAAC,CAClE,GAAI,CAACD,MAAM,CAAE,CACThB,KAAK,CAAC,kCAAkC,CAAC,CACzC,OACJ,CAEAzF,UAAU,CAAC,IAAI,CAAC,CAAE;AAElB,GAAI,CACA,KAAM,CAAA6B,QAAQ,CAAG,KAAM,CAAAF,KAAK,CAAC,qBAAqB6E,EAAE,SAAS,CAAE,CAC3DR,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAE7E,IAAI,CAAC8E,SAAS,CAAC,CAAEQ,kBAAkB,CAAEF,MAAO,CAAC,CACvD,CAAC,CAAC,CAEF,GAAI,CAAC5E,QAAQ,CAACC,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,KAAM,CAAAF,QAAQ,CAACyE,IAAI,CAAC,CAAC,CAAC,CAExDb,KAAK,CAAC,qCAAqC,CAAC,CAC5C/D,iBAAiB,CAAC3C,SAAS,CAAC,CAAE;AAC9BwD,uBAAuB,CAAC/D,YAAY,CAAC,CAAE;AAC3C,CAAE,MAAO2D,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrDsD,KAAK,CAAC,+BAA+B,CAAC,CAC1C,CAAC,OAAS,CACNzF,UAAU,CAAC,KAAK,CAAC,CAAE;AACvB,CACJ,CAAC,CAED,KAAM,CAAA4G,gBAAgB,CAAIC,KAAK,EAAK,CAChC,KAAM,CAAAC,YAAY,CAAG3H,SAAS,GAAK0H,KAAK,EAAItH,SAAS,GAAK,KAAK,CAAG,MAAM,CAAG,KAAK,CAChFH,YAAY,CAACyH,KAAK,CAAC,CACnBrH,YAAY,CAACsH,YAAY,CAAC,CAE1B,KAAM,CAAAC,kBAAkB,CAAG,CAAC,GAAGpI,YAAY,CAAC,CAACqI,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACxD,KAAM,CAAAC,MAAM,CAAGN,KAAK,GAAK,MAAM,CAAG,GAAI,CAAAnI,IAAI,CAACuI,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAGI,CAAC,CAACJ,KAAK,CAAC,CAC/D,KAAM,CAAAO,MAAM,CAAGP,KAAK,GAAK,MAAM,CAAG,GAAI,CAAAnI,IAAI,CAACwI,CAAC,CAACL,KAAK,CAAC,CAAC,CAAGK,CAAC,CAACL,KAAK,CAAC,CAC/D,MAAO,CAACM,MAAM,CAAGC,MAAM,CAAG,CAAC,CAAG,CAAC,CAAC,GAAKN,YAAY,GAAK,KAAK,CAAG,CAAC,CAAG,CAAC,CAAC,CAAC,CACzE,CAAC,CAAC,CAEFlI,eAAe,CAACmI,kBAAkB,CAAC,CACvC,CAAC,CAED,KAAM,CAAAjC,UAAU,CAAItC,IAAI,EAAK,GAAI,CAAA9D,IAAI,CAAC8D,IAAI,CAAC,CAAC6E,kBAAkB,CAAC,OAAO,CAAC,CACvE,KAAM,CAAAC,UAAU,CAAIC,UAAU,EAAK,CAC/B,GAAI,CACA,KAAM,CAAA/E,IAAI,CAAG,GAAI,CAAA9D,IAAI,CAAC6I,UAAU,CAAC,CACjC,GAAIC,KAAK,CAAChF,IAAI,CAACiF,OAAO,CAAC,CAAC,CAAC,CAAE,CACvB,KAAM,IAAI,CAAA1F,KAAK,CAAC,cAAc,CAAC,CACnC,CACA,MAAO,CAAAS,IAAI,CAACkF,kBAAkB,CAAC,EAAE,CAAE,CAAEC,IAAI,CAAE,SAAS,CAAEC,MAAM,CAAE,SAAS,CAAGC,SAAS,CAAE,KAAK,CAAC,CAAC,CAChG,CAAE,MAAO1F,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEoF,UAAU,CAAC,CACjD,MAAO,cAAc,CACzB,CACJ,CAAC,CAED,mBACInJ,KAAA,QAAK0J,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7B7J,IAAA,QAAK4J,SAAS,CAAC,aAAa,CAAAC,QAAA,cACxB7J,IAAA,CAACF,UAAU,EACPgK,QAAQ,CAAExJ,YAAa,CACvByJ,QAAQ,CAAGzF,IAAI,EAAKU,gBAAgB,CAACV,IAAI,CAAE,CAC3C0F,OAAO,CAAE,GAAI,CAAAxJ,IAAI,CAAC,CAAE,CACpByJ,OAAO,CAAE,GAAI,CAAAzJ,IAAI,CAAC,CAAC,CAAC0J,QAAQ,CAAC,GAAI,CAAA1J,IAAI,CAAC,CAAC,CAACmE,QAAQ,CAAC,CAAC,CAAG,CAAC,CAAE,CACxDwF,UAAU,CAAC,oBAAoB,CAClC,CAAC,CACD,CAAC,cAENjK,KAAA,QAAK0J,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB7J,IAAA,QAAK4J,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,WAAS,CAAK,CAAC,cACtD7J,IAAA,QAAK4J,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAC,mBAAiB,CAAK,CAAC,cAClE7J,IAAA,QAAK4J,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,UAAQ,CAAK,CAAC,EACzD,CAAC,CAELhI,OAAO,eACJ7B,IAAA,QAAK4J,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAC9B7J,IAAA,MAAA6J,QAAA,CAAG,YAAU,CAAG,CAAC,CAChB,CACR,cAED3J,KAAA,UAAO0J,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC7J,IAAA,UAAA6J,QAAA,cACI3J,KAAA,OAAA2J,QAAA,eACI7J,IAAA,OAAA6J,QAAA,CAAI,MAAI,CAAI,CAAC,CACZlJ,MAAM,CAAC8E,GAAG,CAAEa,KAAK,eACdtG,IAAA,OAAA6J,QAAA,CAAyBvD,KAAK,CAACmB,SAAS,EAA/BnB,KAAK,CAACP,OAA8B,CAChD,CAAC,EACF,CAAC,CACF,CAAC,cACR/F,IAAA,UAAA6J,QAAA,CACKxH,KAAK,CAACoD,GAAG,CAAEN,IAAI,eACZjF,KAAA,OAAA2J,QAAA,eACI7J,IAAA,OAAI4J,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAE1E,IAAI,CAAK,CAAC,CACpCxE,MAAM,CAAC8E,GAAG,CAAEa,KAAK,EAAK,CACnB,KAAM,CAAAxC,MAAM,CAAGoB,oBAAoB,CAACC,IAAI,CAAEmB,KAAK,CAACP,OAAO,CAAC,CACxD,KAAM,CAAAqE,WAAW,CAAGtG,MAAM,GAAK,WAAW,EAAIA,MAAM,GAAK,kBAAkB,CAE3E,mBACI9D,IAAA,OAEI4J,SAAS,CAAE,GAAG9F,MAAM,CAACuG,WAAW,CAAC,CAAC,IAC9B9I,gBAAgB,CAAC,GAAG4D,IAAI,IAAImB,KAAK,CAACP,OAAO,EAAE,CAAC,CACtC,kBAAkB,CAClB,EAAE,EACT,CACHuE,OAAO,CAAEF,WAAW,CAAG,IAAM/D,eAAe,CAAClB,IAAI,CAAEmB,KAAK,CAAC,CAAGiE,SAAU,CACtEC,KAAK,CAAE,CAAEC,MAAM,CAAEL,WAAW,CAAG,SAAS,CAAG,aAAc,CAAE,EAPtD,GAAGjF,IAAI,IAAImB,KAAK,CAACP,OAAO,EAQ5B,CAAC,CAEd,CAAC,CAAC,GAlBGZ,IAmBL,CACP,CAAC,CACC,CAAC,EACL,CAAC,CAEPhE,YAAY,eACTnB,IAAA,QAAK4J,SAAS,CAAC,OAAO,CAAAC,QAAA,cAClB3J,KAAA,QAAK0J,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC1B7J,IAAA,SAAM4J,SAAS,CAAC,OAAO,CAACU,OAAO,CAAE3C,UAAW,CAAAkC,QAAA,CAAC,MAE7C,CAAM,CAAC,cACP7J,IAAA,MAAA6J,QAAA,CAAI1I,YAAY,CAAI,CAAC,EACpB,CAAC,CACL,CACR,CAEAY,gBAAgB,eACb/B,IAAA,QAAK4J,SAAS,CAAC,OAAO,CAAAC,QAAA,cAClB3J,KAAA,QAAK0J,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC1B7J,IAAA,OAAA6J,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3B3J,KAAA,MAAA2J,QAAA,eAAG7J,IAAA,WAAA6J,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAAC9H,gBAAgB,CAACuC,IAAI,EAAI,CAAC,cACrDpE,KAAA,MAAA2J,QAAA,eAAG7J,IAAA,WAAA6J,QAAA,CAAQ,aAAW,CAAQ,CAAC,IAAC,CAAC9H,gBAAgB,CAAC2F,SAAS,EAAI,CAAC,cAChExH,KAAA,MAAA2J,QAAA,eAAG7J,IAAA,WAAA6J,QAAA,CAAQ,QAAM,CAAQ,CAAC,IAAC,CAAC9H,gBAAgB,CAACyF,SAAS,EAAI,CAAC,cAE3DtH,KAAA,UAAA2J,QAAA,eACI7J,IAAA,WAAA6J,QAAA,CAAQ,mBAAiB,CAAQ,CAAC,cAClC7J,IAAA,WACI0K,KAAK,CAAEvI,gBAAiB,CACxB4H,QAAQ,CAAGY,CAAC,EAAKvI,mBAAmB,CAACsD,MAAM,CAACiF,CAAC,CAACC,MAAM,CAACF,KAAK,CAAC,CAAE,CAAAb,QAAA,CAE5D,CAAC,GAAGvH,KAAK,CAAC,CAAC,CAAC,CAACuI,IAAI,CAAC,CAAC,CAAC,CAACpF,GAAG,CAAEqF,CAAC,eACxB9K,IAAA,WAAoB0K,KAAK,CAAEI,CAAC,CAAG,CAAE,CAAAjB,QAAA,CAC5BiB,CAAC,CAAG,CAAC,EADGA,CAAC,CAAG,CAET,CACX,CAAC,CACE,CAAC,EACN,CAAC,cAER9K,IAAA,WAAQ4J,SAAS,CAAC,eAAe,CAACU,OAAO,CAAEA,CAAA,GAAMtI,mBAAmB,CAAC,IAAI,CAAE,CAAA6H,QAAA,CAAC,OAAK,CAAQ,CAAC,cAC1F7J,IAAA,WACI4J,SAAS,CAAC,gBAAgB,CAC1BU,OAAO,CAAEA,CAAA,GAAM,CACX,KAAM,CAAAS,SAAS,CAAGrF,MAAM,CAAC3D,gBAAgB,CAAC2F,SAAS,CAAClC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAClE,KAAM,CAAAwF,OAAO,CAAGD,SAAS,CAAG5I,gBAAgB,CAE5C;AACA,GAAI6I,OAAO,CAAG,EAAE,CAAE,CACdzD,KAAK,CAAC,wDAAwD,CAAC,CAC/D,OAAQ;AACZ,CAEArF,oBAAoB,CAAC,CACjB,GAAGH,gBAAgB,CACnBkJ,QAAQ,CAAE9I,gBAAgB,CAC1BgG,OAAO,CAAE,GAAG6C,OAAO,KAAO;AAC9B,CAAC,CAAC,CAEFhJ,mBAAmB,CAAC,IAAI,CAAC,CAC7B,CAAE,CAAA6H,QAAA,CACL,SAED,CAAQ,CAAC,EACR,CAAC,CACL,CACR,CAEA5H,iBAAiB,eACdjC,IAAA,QAAK4J,SAAS,CAAC,OAAO,CAAAC,QAAA,cAClB3J,KAAA,QAAK0J,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC1B7J,IAAA,OAAA6J,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5B3J,KAAA,MAAA2J,QAAA,eAAG7J,IAAA,WAAA6J,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAAC9I,QAAQ,EAAI,CAAC,cACxCb,KAAA,MAAA2J,QAAA,eAAG7J,IAAA,WAAA6J,QAAA,CAAQ,QAAM,CAAQ,CAAC,IAAC,CAAChJ,SAAS,EAAI,CAAC,cAC1CX,KAAA,MAAA2J,QAAA,eAAG7J,IAAA,WAAA6J,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAAC5H,iBAAiB,CAACqC,IAAI,EAAI,CAAC,cACtDpE,KAAA,MAAA2J,QAAA,eAAG7J,IAAA,WAAA6J,QAAA,CAAQ,aAAW,CAAQ,CAAC,IAAC,CAAC5H,iBAAiB,CAACyF,SAAS,EAAI,CAAC,cACjExH,KAAA,MAAA2J,QAAA,eAAG7J,IAAA,WAAA6J,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAAC5H,iBAAiB,CAACkG,OAAO,EAAI,CAAC,cAC7DjI,KAAA,MAAA2J,QAAA,eAAG7J,IAAA,WAAA6J,QAAA,CAAQ,QAAM,CAAQ,CAAC,IAAC,CAAC5H,iBAAiB,CAACuF,SAAS,EAAI,CAAC,cAC5DtH,KAAA,MAAA2J,QAAA,eAAG7J,IAAA,WAAA6J,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAAC5H,iBAAiB,CAACgJ,QAAQ,CAAC,QAAM,EAAG,CAAC,cAEpEjL,IAAA,WAAQ4J,SAAS,CAAC,eAAe,CAACU,OAAO,CAAEA,CAAA,GAAMpI,oBAAoB,CAAC,IAAI,CAAE,CAAA2H,QAAA,CAAC,QAAM,CAAQ,CAAC,cAC5F7J,IAAA,WAAQ4J,SAAS,CAAC,gBAAgB,CAC9BU,OAAO,CAAE,KAAAA,CAAA,GAAY,CACjB,KAAM,CAAA1C,iBAAiB,CAAC3F,iBAAiB,CAAC,CAC1CC,oBAAoB,CAAC,IAAI,CAAC,CAC9B,CAAE,CAAA2H,QAAA,CACL,oBAED,CAAQ,CAAC,EACR,CAAC,CACL,CACR,cAED7J,IAAA,OAAI4J,SAAS,CAAC,SAAS,CAAE,CAAC,CAEzB/I,SAAS,cACNX,KAAA,CAAAE,SAAA,EAAAyJ,QAAA,eACI7J,IAAA,OAAA6J,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1B3J,KAAA,UAAO0J,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC7J,IAAA,UAAA6J,QAAA,cACI3J,KAAA,OAAA2J,QAAA,eACI7J,IAAA,OAAIsK,OAAO,CAAEA,CAAA,GAAM5B,gBAAgB,CAAC,MAAM,CAAE,CAAAmB,QAAA,CAAC,MAAI,CAAI,CAAC,cACtD7J,IAAA,OAAIsK,OAAO,CAAEA,CAAA,GAAM5B,gBAAgB,CAAC,WAAW,CAAE,CAAAmB,QAAA,CAAC,OAAK,CAAI,CAAC,cAC5D7J,IAAA,OAAA6J,QAAA,CAAI,KAAG,CAAI,CAAC,cACZ7J,IAAA,OAAIsK,OAAO,CAAEA,CAAA,GAAM5B,gBAAgB,CAAC,WAAW,CAAE,CAAAmB,QAAA,CAAC,OAAK,CAAI,CAAC,cAC5D7J,IAAA,OAAIsK,OAAO,CAAEA,CAAA,GAAM5B,gBAAgB,CAAC,QAAQ,CAAE,CAAAmB,QAAA,CAAC,QAAM,CAAI,CAAC,EAC1D,CAAC,CACF,CAAC,cACR7J,IAAA,UAAA6J,QAAA,CACKpJ,YAAY,CAACgF,GAAG,CAAC,CAACG,WAAW,CAAE9C,KAAK,gBACjC5C,KAAA,CAACP,KAAK,CAACQ,QAAQ,EAAA0J,QAAA,eAEX3J,KAAA,OAAIoK,OAAO,CAAEA,CAAA,GAAMzH,SAAS,CAACC,KAAK,CAAE,CAAA+G,QAAA,eAChC7J,IAAA,OAAA6J,QAAA,CAAKjD,UAAU,CAAChB,WAAW,CAACpF,IAAI,CAAC,CAAK,CAAC,cACvCR,IAAA,OAAA6J,QAAA,CAAKT,UAAU,CAACxD,WAAW,CAACK,SAAS,CAAC,CAAK,CAAC,cAC5CjG,IAAA,OAAA6J,QAAA,CAAKT,UAAU,CAACxD,WAAW,CAACO,OAAO,CAAC,CAAK,CAAC,cAC1CnG,IAAA,OAAA6J,QAAA,CAAKjE,WAAW,CAAC6B,SAAS,CAAK,CAAC,cAChCzH,IAAA,OAAA6J,QAAA,CAAKjE,WAAW,CAACQ,MAAM,CAAK,CAAC,EAC7B,CAAC,CAGJ3E,YAAY,CAACyJ,QAAQ,CAACpI,KAAK,CAAC,eACzB9C,IAAA,OAAI4J,SAAS,CAAC,cAAc,CAAAC,QAAA,cACxB7J,IAAA,OAAImL,OAAO,CAAC,GAAG,CAAAtB,QAAA,cACX3J,KAAA,QAAK0J,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7B3J,KAAA,MAAA2J,QAAA,eACI7J,IAAA,WAAA6J,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAACjE,WAAW,CAACtC,IAAI,EACzC,CAAC,cACJpD,KAAA,MAAA2J,QAAA,eACI7J,IAAA,WAAA6J,QAAA,CAAQ,QAAM,CAAQ,CAAC,IAAC,CAACjE,WAAW,CAACvC,KAAK,EAC3C,CAAC,cACJnD,KAAA,MAAA2J,QAAA,eACI7J,IAAA,WAAA6J,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAACjE,WAAW,CAACwF,QAAQ,CAAC,QACrD,EAAG,CAAC,CACHxF,WAAW,CAACQ,MAAM,GAAK,WAAW,eAC/BlG,KAAA,MAAA2J,QAAA,eACI7J,IAAA,WAAA6J,QAAA,CAAQ,sBAAoB,CAAQ,CAAC,CAAC,GAAG,CACxCjE,WAAW,CAAC6C,kBAAkB,EAChC,CACN,CACA7C,WAAW,CAACQ,MAAM,GAAK,SAAS,eAC7BpG,IAAA,WACI4J,SAAS,CAAC,eAAe,CACzBU,OAAO,CAAGK,CAAC,EAAK,CACZA,CAAC,CAACU,eAAe,CAAC,CAAC,CAAE;AACrBhD,iBAAiB,CAACzC,WAAW,CAAC0F,aAAa,CAAC,CAChD,CAAE,CAAAzB,QAAA,CACL,QAED,CAAQ,CACX,EACA,CAAC,CACN,CAAC,CACL,CACP,GA5CgBjE,WAAW,CAAC0F,aA6CjB,CACnB,CAAC,CACC,CAAC,EACL,CAAC,EACV,CAAC,cAEHtL,IAAA,MAAA6J,QAAA,CAAG,0CAAwC,CAAG,CACjD,EACA,CAAC,CAEd,CAEA,cAAe,CAAAxJ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}